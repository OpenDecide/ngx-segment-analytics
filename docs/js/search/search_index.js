var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.5","fields":["title","body"],"fieldVectors":[["title/interfaces/SegmentConfig.html",[0,0.654,1,0.654]],["body/interfaces/SegmentConfig.html",[0,1.089,1,0.993,2,1.258,3,1.258,4,0.603,5,0.603,6,0.644,7,2.012,8,1.58,9,1.386,10,1.001,11,1.589,12,1.205,13,2.299,14,2.422,15,2.927,16,2.189,17,1.089,18,0.089,19,1.997,20,2.542,21,3.37,22,2.422,23,2.542,24,3.37,25,1.589,26,2.542,27,0.786,28,0.069,29,0.069]],["title/modules/SegmentModule.html",[30,0.502,31,0.833]],["body/modules/SegmentModule.html",[1,1,2,0.901,3,0.901,4,0.432,5,0.609,6,0.698,8,1.597,9,1.172,12,0.795,17,0.563,18,0.092,25,0.901,27,1,28,0.055,29,0.055,30,0.881,31,1.273,32,0.717,33,1.441,34,2.033,35,1.91,36,2.033,37,1.441,38,1.91,39,2.033,40,0.901,41,0.901,42,1.85,43,1.91,44,1.687,45,2.356,46,1.751,47,1.85,48,2.033,49,1.597,50,0.518,51,2.033,52,0.901,53,2.033,54,1.441,55,1.132,56,1.011,57,1.271,58,1.441,59,1.271,60,1.132,61,1.132,62,1.011,63,1.011,64,1.132,65,1.6,66,1.441,67,1.271,68,1.271,69,1.271,70,1.011,71,0.901,72,2.033,73,1.271,74,1.132,75,1.055,76,0.901,77,0.432,78,1.132,79,1.441,80,1.441,81,0.901,82,1.441,83,1.597,84,1.441,85,0.901,86,2.356,87,1.132,88,1.441,89,1.441,90,1.441,91,1.441,92,1.132]],["title/interfaces/SegmentPlugin.html",[0,0.654,93,1.047]],["body/interfaces/SegmentPlugin.html",[0,0.381,1,0.381,2,0.355,3,0.355,4,0.17,5,0.17,6,0.411,9,0.485,11,1.767,12,1.164,13,0.446,14,1.006,16,2.237,18,0.092,19,0.765,20,1.711,22,0.765,23,0.974,25,0.801,26,1.52,27,0.381,28,0.026,29,0.026,33,2.657,40,0.355,41,1.638,42,0.765,44,1.836,46,0.95,50,0.282,52,0.355,55,0.446,56,0.282,57,0.609,59,0.355,61,0.765,62,0.282,63,1.049,65,0.355,69,0.355,70,0.485,71,0.355,73,1.702,76,0.609,77,0.599,83,2.383,85,0.355,87,0.446,93,0.801,94,0.567,95,0.609,96,0.752,97,0.752,98,1.281,99,0.752,100,0.752,101,0.752,102,0.752,103,1.292,104,1.292,105,1.698,106,0.752,107,1.698,108,0.752,109,0.752,110,1.292,111,1.698,112,1.292,113,1.698,114,0.752,115,0.752,116,1.698,117,1.292,118,0.752,119,1.292,120,1.281,121,0.752,122,0.752,123,0.974,124,0.752,125,1.292,126,1.292,127,0.752,128,0.752,129,0.752,130,0.752,131,0.752,132,0.752,133,2.481,134,1.006,135,2.268,136,3.213,137,1.281,138,1.292,139,3.567,140,0.752,141,0.752,142,0.752,143,0.752,144,0.752,145,0.752,146,0.752,147,0.752,148,0.752,149,0.752,150,0.752,151,0.752,152,0.752,153,0.752,154,0.752,155,0.752,156,0.752,157,0.752,158,1.292,159,0.752,160,0.752,161,0.752,162,0.752,163,0.752,164,0.752,165,0.752,166,0.567,167,1.999,168,0.752,169,0.752,170,1.52,171,2.691,172,0.974,173,0.752,174,1.698,175,2.481,176,0.752,177,1.999,178,3.356,179,0.752,180,0.752,181,0.567,182,2.205,183,2.476,184,0.752,185,2.268,186,2.014,187,2.014,188,0.752,189,1.989,190,0.752,191,0.567,192,0.752,193,2.476,194,1.698,195,1.698,196,1.698,197,2.268,198,1.698,199,0.752,200,2.014,201,0.974,202,0.752,203,0.752,204,0.752,205,0.752,206,0.752,207,0.752,208,0.752,209,0.752,210,0.752,211,0.752,212,0.752,213,0.752,214,0.752,215,0.752,216,0.752,217,0.752,218,0.752,219,0.752,220,0.752,221,2.923,222,0.567,223,0.752,224,0.752,225,0.752,226,0.752,227,0.752,228,0.752,229,0.752,230,1.281,231,0.752,232,0.752,233,0.567,234,0.752,235,0.567,236,0.752,237,0.752,238,1.292,239,1.698,240,0.752,241,1.698,242,0.752,243,0.752,244,0.752,245,0.752,246,0.752,247,0.752,248,0.752,249,0.752,250,0.752,251,0.752,252,0.752,253,0.752,254,0.752,255,0.752,256,0.752,257,0.567,258,0.752,259,1.292,260,1.292,261,0.567,262,0.752,263,0.752,264,1.52,265,0.752,266,0.752,267,0.567,268,0.752,269,0.752,270,0.752,271,0.752,272,2.014,273,1.292,274,0.752,275,2.014,276,0.446,277,0.567,278,1.52,279,0.752,280,0.752,281,2.014,282,0.752,283,0.567,284,0.752,285,0.752,286,1.292,287,0.752,288,0.752,289,0.974,290,0.567,291,0.752,292,0.567,293,0.752]],["title/injectables/WindowWrapper.html",[50,0.368,70,0.833]],["body/injectables/WindowWrapper.html",[1,0.805,2,0.918,3,0.918,4,0.44,5,0.617,6,0.687,8,1.153,9,1.025,10,0.73,11,1.288,12,0.574,17,0.574,18,0.092,25,0.918,27,1.008,28,0.056,29,0.056,30,0.773,31,1.184,32,0.73,34,1.468,36,1.468,37,1.468,39,1.468,42,1.618,44,1.613,45,2.06,46,1.761,47,1.869,48,2.06,49,1.618,50,0.567,51,2.06,52,0.918,53,2.06,54,1.468,55,1.153,56,1.025,57,1.288,58,1.468,59,1.288,60,1.153,61,1.153,62,1.025,63,1.025,64,1.153,65,1.699,66,2.06,67,1.488,68,1.488,69,1.288,70,1.184,71,1.288,72,2.38,73,1.613,74,2.026,75,1.062,76,0.918,77,0.44,78,1.153,79,1.468,80,1.468,81,0.918,82,1.468,83,1.618,84,1.468,85,0.918,86,2.38,87,1.153,88,1.468,89,1.468,90,1.468,91,1.468,92,1.153,294,1.946]],["title/coverage.html",[295,2.254]],["body/coverage.html",[0,1.034,1,0.839,4,0.643,5,0.939,6,0.689,7,2.146,17,0.839,18,0.087,28,0.072,29,0.072,32,1.427,50,0.582,56,1.067,62,1.067,63,1.067,70,1.067,77,0.643,81,1.342,93,1.342,94,2.647,95,1.342,133,2.146,295,2.146,296,2.845,297,3.971,298,2.845,299,2.845,300,3.508,301,1.686,302,2.845,303,2.845,304,2.845,305,2.845,306,2.845,307,2.845]],["title/miscellaneous/functions.html",[77,0.601,308,0.884]],["body/miscellaneous/functions.html",[5,0.72,6,0.623,10,1.195,12,0.939,17,0.939,18,0.082,28,0.077,29,0.077,32,1.409,40,1.502,41,1.502,65,1.502,67,1.502,68,1.502,75,0.939,77,0.72,78,1.887,81,1.771,308,1.502,309,2.402,310,3.184]],["title/index.html",[10,0.703,311,1.413,312,1.413]],["body/index.html",[4,0.575,6,0.644,11,1.636,12,1.066,13,1.045,14,1.045,15,1.33,16,2.414,18,0.09,19,1.77,22,1.045,27,0.75,28,0.052,29,0.052,30,0.575,31,0.955,40,0.832,41,0.832,44,0.832,46,1.833,47,1.508,50,0.292,52,1.2,56,1.121,57,1.543,67,1.409,68,0.832,69,1.2,71,1.2,73,0.832,74,1.77,75,0.75,76,0.832,77,0.739,85,0.832,92,1.508,93,0.832,95,1.2,98,1.33,120,1.92,134,1.045,137,1.33,166,1.33,167,2.616,171,1.33,175,2.253,177,1.33,181,1.33,182,2.811,189,1.77,191,1.33,201,1.33,222,1.33,230,1.33,235,1.33,257,1.33,261,2.253,264,1.92,267,1.33,276,1.508,277,1.33,278,2.467,283,1.33,289,1.33,290,1.33,292,1.33,313,1.763,314,2.545,315,2.545,316,1.763,317,2.987,318,3.271,319,1.763,320,1.763,321,1.763,322,2.545,323,1.763,324,2.987,325,1.763,326,1.33,327,1.763,328,1.763,329,1.33,330,1.763,331,2.545,332,2.545,333,1.763,334,2.545,335,1.763,336,1.763,337,1.763,338,1.763,339,1.763,340,1.763,341,1.763,342,1.763,343,1.763,344,1.763,345,1.763,346,1.763,347,1.33,348,1.763,349,1.763,350,1.763,351,2.545,352,1.763,353,1.763,354,1.763,355,1.763,356,1.763,357,1.763,358,1.763,359,1.763,360,1.763,361,1.92,362,1.763,363,1.763,364,1.763,365,1.33,366,1.33,367,1.33]],["title/license.html",[311,1.413,312,1.413,368,1.413]],["body/license.html",[4,0.58,18,0.067,28,0.067,29,0.067,75,0.756,95,1.21,123,2.736,170,1.935,172,1.935,189,1.52,276,1.948,361,1.935,365,2.479,366,1.935,367,1.935,368,1.935,369,3.627,370,2.565,371,3.287,372,2.565,373,2.565,374,2.565,375,2.565,376,3.287,377,2.565,378,3.825,379,4.208,380,3.287,381,3.627,382,2.565,383,3.287,384,2.565,385,2.565,386,2.565,387,2.565,388,2.565,389,2.565,390,2.565,391,2.565,392,2.565,393,2.565,394,2.565,395,2.565,396,2.565,397,3.287,398,3.287,399,2.565,400,2.565,401,3.287,402,2.565,403,2.565,404,2.565,405,2.565,406,2.565,407,2.565,408,2.565,409,2.565,410,2.565,411,2.565,412,2.565,413,2.565,414,2.565,415,2.565,416,2.565,417,2.565,418,2.565,419,2.565,420,2.565,421,1.935,422,2.565]],["title/modules.html",[30,0.675]],["body/modules.html",[18,0.08,28,0.08,29,0.08,30,0.764,31,1.268,347,2.549,423,3.379,424,3.379]],["title/overview.html",[425,2.254]],["body/overview.html",[0,0.952,18,0.077,27,0.952,28,0.077,29,0.077,30,0.856,50,0.535,75,0.952,134,1.913,326,2.435,329,2.435,421,2.435,425,2.435,426,3.228,427,3.228,428,3.785,429,3.228,430,3.785]],["title/miscellaneous/variables.html",[301,1.575,308,0.884]],["body/miscellaneous/variables.html",[5,0.708,6,0.68,9,1.175,10,1.175,17,0.923,18,0.084,28,0.076,29,0.076,32,1.395,49,2.203,50,0.519,59,1.477,60,1.855,62,1.488,63,1.175,64,1.855,233,2.362,301,1.855,308,1.477,309,2.362,431,3.131]]],"invertedIndex":[["",{"_index":18,"title":{},"body":{"interfaces/SegmentConfig.html":{},"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"injectables/WindowWrapper.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":304,"title":{},"body":{"coverage.html":{}}}],["0/1",{"_index":305,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":429,"title":{},"body":{"overview.html":{}}}],["1/1",{"_index":300,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":297,"title":{},"body":{"coverage.html":{}}}],["18/20",{"_index":303,"title":{},"body":{"coverage.html":{}}}],["2",{"_index":430,"title":{},"body":{"overview.html":{}}}],["2/2",{"_index":299,"title":{},"body":{"coverage.html":{}}}],["2017",{"_index":366,"title":{},"body":{"index.html":{},"license.html":{}}}],["4.1.0",{"_index":163,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["4/4",{"_index":298,"title":{},"body":{"coverage.html":{}}}],["90",{"_index":302,"title":{},"body":{"coverage.html":{}}}],["abov",{"_index":396,"title":{},"body":{"license.html":{}}}],["accesstoken",{"_index":100,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["action",{"_index":172,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"license.html":{}}}],["add",{"_index":321,"title":{},"body":{"index.html":{}}}],["alia",{"_index":138,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["alias(userid",{"_index":235,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["allow",{"_index":237,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["along",{"_index":195,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["alreadi",{"_index":91,"title":{},"body":{"modules/SegmentModule.html":{},"injectables/WindowWrapper.html":{}}}],["analyt",{"_index":74,"title":{},"body":{"modules/SegmentModule.html":{},"injectables/WindowWrapper.html":{},"index.html":{}}}],["analytics.config",{"_index":59,"title":{},"body":{"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"injectables/WindowWrapper.html":{},"miscellaneous/variables.html":{}}}],["analytics.config.t",{"_index":7,"title":{},"body":{"interfaces/SegmentConfig.html":{},"coverage.html":{}}}],["analytics.j",{"_index":71,"title":{},"body":{"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"injectables/WindowWrapper.html":{},"index.html":{}}}],["analytics.min.j",{"_index":157,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["analytics.modul",{"_index":96,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["analytics.module.t",{"_index":32,"title":{},"body":{"modules/SegmentModule.html":{},"injectables/WindowWrapper.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["analytics.module.ts:15",{"_index":294,"title":{},"body":{"injectables/WindowWrapper.html":{}}}],["analytics.module.ts:43",{"_index":38,"title":{},"body":{"modules/SegmentModule.html":{}}}],["analytics.servic",{"_index":58,"title":{},"body":{"modules/SegmentModule.html":{},"injectables/WindowWrapper.html":{}}}],["analytics.service.t",{"_index":94,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"coverage.html":{}}}],["analyticsconsum",{"_index":320,"title":{},"body":{"index.html":{}}}],["and/or",{"_index":389,"title":{},"body":{"license.html":{}}}],["angular",{"_index":67,"title":{},"body":{"modules/SegmentModule.html":{},"injectables/WindowWrapper.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["angular/common",{"_index":55,"title":{},"body":{"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"injectables/WindowWrapper.html":{}}}],["angular/cor",{"_index":52,"title":{},"body":{"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"injectables/WindowWrapper.html":{},"index.html":{}}}],["angular/platform",{"_index":323,"title":{},"body":{"index.html":{}}}],["anonymousid",{"_index":248,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["aot",{"_index":68,"title":{},"body":{"modules/SegmentModule.html":{},"injectables/WindowWrapper.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["api",{"_index":19,"title":{},"body":{"interfaces/SegmentConfig.html":{},"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["apikey",{"_index":13,"title":{},"body":{"interfaces/SegmentConfig.html":{},"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["app.compon",{"_index":325,"title":{},"body":{"index.html":{}}}],["appcompon",{"_index":324,"title":{},"body":{"index.html":{}}}],["appmodul",{"_index":92,"title":{},"body":{"modules/SegmentModule.html":{},"injectables/WindowWrapper.html":{},"index.html":{}}}],["arg",{"_index":142,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["args.unshift(method",{"_index":143,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["aris",{"_index":420,"title":{},"body":{"license.html":{}}}],["array",{"_index":273,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["assemblag",{"_index":210,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["associ",{"_index":170,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"license.html":{}}}],["attach",{"_index":269,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["author",{"_index":410,"title":{},"body":{"license.html":{}}}],["avail",{"_index":347,"title":{},"body":{"index.html":{},"modules.html":{}}}],["be",{"_index":198,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["bind",{"_index":280,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["boolean",{"_index":22,"title":{},"body":{"interfaces/SegmentConfig.html":{},"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["bootstrap",{"_index":329,"title":{},"body":{"index.html":{},"overview.html":{}}}],["bound",{"_index":274,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["brows",{"_index":424,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":76,"title":{},"body":{"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"injectables/WindowWrapper.html":{},"index.html":{}}}],["browsermodul",{"_index":322,"title":{},"body":{"index.html":{}}}],["buildto",{"_index":360,"title":{},"body":{"index.html":{}}}],["c",{"_index":370,"title":{},"body":{"license.html":{}}}],["call",{"_index":239,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["callback",{"_index":264,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["came",{"_index":216,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["categori",{"_index":200,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["charg",{"_index":375,"title":{},"body":{"license.html":{}}}],["claim",{"_index":413,"title":{},"body":{"license.html":{}}}],["class",{"_index":69,"title":{},"body":{"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"injectables/WindowWrapper.html":{},"index.html":{}}}],["clear",{"_index":249,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["cluster",{"_index":211,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["code",{"_index":263,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["combin",{"_index":224,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["commonmodul",{"_index":53,"title":{},"body":{"modules/SegmentModule.html":{},"injectables/WindowWrapper.html":{}}}],["compani",{"_index":203,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["compat",{"_index":315,"title":{},"body":{"index.html":{}}}],["complet",{"_index":243,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["compon",{"_index":331,"title":{},"body":{"index.html":{}}}],["concept",{"_index":219,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["condit",{"_index":395,"title":{},"body":{"license.html":{}}}],["config",{"_index":42,"title":{},"body":{"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"injectables/WindowWrapper.html":{}}}],["configur",{"_index":9,"title":{},"body":{"interfaces/SegmentConfig.html":{},"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"injectables/WindowWrapper.html":{},"miscellaneous/variables.html":{}}}],["connect",{"_index":422,"title":{},"body":{"license.html":{}}}],["consol",{"_index":256,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["console.error('seg",{"_index":121,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["console.error('th",{"_index":114,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["console.log(\"ev",{"_index":344,"title":{},"body":{"index.html":{}}}],["console.log('seg",{"_index":126,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["const",{"_index":61,"title":{},"body":{"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"injectables/WindowWrapper.html":{}}}],["constructor",{"_index":85,"title":{},"body":{"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"injectables/WindowWrapper.html":{},"index.html":{}}}],["constructor(@opt",{"_index":88,"title":{},"body":{"modules/SegmentModule.html":{},"injectables/WindowWrapper.html":{}}}],["constructor(priv",{"_index":341,"title":{},"body":{"index.html":{}}}],["contract",{"_index":417,"title":{},"body":{"license.html":{}}}],["copi",{"_index":378,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":369,"title":{},"body":{"license.html":{}}}],["coverag",{"_index":295,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["current",{"_index":221,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["custom",{"_index":262,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["d.t",{"_index":358,"title":{},"body":{"index.html":{}}}],["damag",{"_index":414,"title":{},"body":{"license.html":{}}}],["databas",{"_index":176,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["deal",{"_index":380,"title":{},"body":{"license.html":{}}}],["debug",{"_index":14,"title":{},"body":{"interfaces/SegmentConfig.html":{},"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["debug(en",{"_index":257,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["declar",{"_index":326,"title":{},"body":{"index.html":{},"overview.html":{}}}],["default",{"_index":233,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"miscellaneous/variables.html":{}}}],["defin",{"_index":37,"title":{},"body":{"modules/SegmentModule.html":{},"injectables/WindowWrapper.html":{}}}],["dep",{"_index":82,"title":{},"body":{"modules/SegmentModule.html":{},"injectables/WindowWrapper.html":{}}}],["depend",{"_index":426,"title":{},"body":{"overview.html":{}}}],["descript",{"_index":8,"title":{},"body":{"interfaces/SegmentConfig.html":{},"modules/SegmentModule.html":{},"injectables/WindowWrapper.html":{}}}],["destin",{"_index":242,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["dictionari",{"_index":178,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["distlicens",{"_index":364,"title":{},"body":{"index.html":{}}}],["distribut",{"_index":387,"title":{},"body":{"license.html":{}}}],["doc",{"_index":104,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["document",{"_index":95,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"coverage.html":{},"index.html":{},"license.html":{}}}],["dom",{"_index":105,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["dynam",{"_index":102,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["each",{"_index":265,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["element",{"_index":272,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["email",{"_index":180,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["emit",{"_index":266,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["empti",{"_index":115,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["enabl",{"_index":241,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["error('segmentmodul",{"_index":90,"title":{},"body":{"modules/SegmentModule.html":{},"injectables/WindowWrapper.html":{}}}],["event",{"_index":189,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{},"license.html":{}}}],["execut",{"_index":238,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["export",{"_index":27,"title":{},"body":{"interfaces/SegmentConfig.html":{},"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"injectables/WindowWrapper.html":{},"index.html":{},"overview.html":{}}}],["express",{"_index":403,"title":{},"body":{"license.html":{}}}],["extra",{"_index":196,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["fals",{"_index":118,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["file",{"_index":4,"title":{},"body":{"interfaces/SegmentConfig.html":{},"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"injectables/WindowWrapper.html":{},"coverage.html":{},"index.html":{},"license.html":{}}}],["first",{"_index":158,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["first.parentnode.insertbefore(script",{"_index":160,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["fit",{"_index":406,"title":{},"body":{"license.html":{}}}],["follow",{"_index":394,"title":{},"body":{"license.html":{}}}],["form",{"_index":281,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["forroot",{"_index":35,"title":{},"body":{"modules/SegmentModule.html":{}}}],["forroot(config",{"_index":36,"title":{},"body":{"modules/SegmentModule.html":{},"injectables/WindowWrapper.html":{}}}],["free",{"_index":374,"title":{},"body":{"license.html":{}}}],["full",{"_index":346,"title":{},"body":{"index.html":{}}}],["function",{"_index":77,"title":{"miscellaneous/functions.html":{}},"body":{"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"injectables/WindowWrapper.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["furnish",{"_index":392,"title":{},"body":{"license.html":{}}}],["gang",{"_index":213,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["gener",{"_index":356,"title":{},"body":{"index.html":{}}}],["get",{"_index":311,"title":{"index.html":{},"license.html":{}},"body":{}}],["getwindow",{"_index":81,"title":{},"body":{"modules/SegmentModule.html":{},"injectables/WindowWrapper.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["getwindow(platformid",{"_index":78,"title":{},"body":{"modules/SegmentModule.html":{},"injectables/WindowWrapper.html":{},"miscellaneous/functions.html":{}}}],["grant",{"_index":373,"title":{},"body":{"license.html":{}}}],["graph",{"_index":423,"title":{},"body":{"modules.html":{}}}],["group",{"_index":135,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["group(groupid",{"_index":222,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["groupid",{"_index":220,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["handler",{"_index":270,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["help",{"_index":254,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["helper",{"_index":287,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["here",{"_index":348,"title":{},"body":{"index.html":{}}}],["herebi",{"_index":372,"title":{},"body":{"license.html":{}}}],["hero",{"_index":334,"title":{},"body":{"index.html":{}}}],["hero.component.css",{"_index":338,"title":{},"body":{"index.html":{}}}],["hero.component.html",{"_index":336,"title":{},"body":{"index.html":{}}}],["herocompon",{"_index":339,"title":{},"body":{"index.html":{}}}],["holder",{"_index":411,"title":{},"body":{"license.html":{}}}],["htmlelement",{"_index":278,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["https://cdn.segment.com/analytics.js/v1",{"_index":156,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["id",{"_index":177,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["ident",{"_index":228,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["identifi",{"_index":133,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"coverage.html":{}}}],["identify(userid",{"_index":181,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["implement",{"_index":340,"title":{},"body":{"index.html":{}}}],["impli",{"_index":404,"title":{},"body":{"license.html":{}}}],["import",{"_index":46,"title":{},"body":{"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"injectables/WindowWrapper.html":{},"index.html":{}}}],["includ",{"_index":123,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"license.html":{}}}],["index",{"_index":10,"title":{"index.html":{}},"body":{"interfaces/SegmentConfig.html":{},"injectables/WindowWrapper.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":2,"title":{},"body":{"interfaces/SegmentConfig.html":{},"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"injectables/WindowWrapper.html":{}}}],["inform",{"_index":197,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["initi",{"_index":26,"title":{},"body":{"interfaces/SegmentConfig.html":{},"interfaces/SegmentPlugin.html":{}}}],["initialis",{"_index":39,"title":{},"body":{"modules/SegmentModule.html":{},"injectables/WindowWrapper.html":{}}}],["inject",{"_index":50,"title":{"injectables/WindowWrapper.html":{}},"body":{"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"injectables/WindowWrapper.html":{},"coverage.html":{},"index.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["inject(docu",{"_index":108,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["inject(segment_config",{"_index":109,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["inject(windowwrapp",{"_index":106,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["injectiontoken",{"_index":49,"title":{},"body":{"modules/SegmentModule.html":{},"injectables/WindowWrapper.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('ngx",{"_index":64,"title":{},"body":{"modules/SegmentModule.html":{},"injectables/WindowWrapper.html":{},"miscellaneous/variables.html":{}}}],["instal",{"_index":317,"title":{},"body":{"index.html":{}}}],["instanc",{"_index":72,"title":{},"body":{"modules/SegmentModule.html":{},"injectables/WindowWrapper.html":{}}}],["instead",{"_index":349,"title":{},"body":{"index.html":{}}}],["integr",{"_index":149,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["interfac",{"_index":0,"title":{"interfaces/SegmentConfig.html":{},"interfaces/SegmentPlugin.html":{}},"body":{"interfaces/SegmentConfig.html":{},"interfaces/SegmentPlugin.html":{},"coverage.html":{},"overview.html":{}}}],["isplatformbrows",{"_index":54,"title":{},"body":{"modules/SegmentModule.html":{},"injectables/WindowWrapper.html":{}}}],["isplatformbrowser(platformid",{"_index":79,"title":{},"body":{"modules/SegmentModule.html":{},"injectables/WindowWrapper.html":{}}}],["js",{"_index":357,"title":{},"body":{"index.html":{}}}],["key",{"_index":20,"title":{},"body":{"interfaces/SegmentConfig.html":{},"interfaces/SegmentPlugin.html":{}}}],["kind",{"_index":402,"title":{},"body":{"license.html":{}}}],["know",{"_index":179,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["legend",{"_index":427,"title":{},"body":{"overview.html":{}}}],["length",{"_index":285,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["let",{"_index":186,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["liabil",{"_index":415,"title":{},"body":{"license.html":{}}}],["liabl",{"_index":412,"title":{},"body":{"license.html":{}}}],["librari",{"_index":314,"title":{},"body":{"index.html":{}}}],["licens",{"_index":368,"title":{"license.html":{}},"body":{"license.html":{}}}],["limit",{"_index":383,"title":{},"body":{"license.html":{}}}],["link",{"_index":271,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["lint",{"_index":353,"title":{},"body":{"index.html":{}}}],["lintto",{"_index":355,"title":{},"body":{"index.html":{}}}],["listen",{"_index":260,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["load",{"_index":25,"title":{},"body":{"interfaces/SegmentConfig.html":{},"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"injectables/WindowWrapper.html":{}}}],["load(apikey",{"_index":166,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["loadoniniti",{"_index":15,"title":{},"body":{"interfaces/SegmentConfig.html":{},"index.html":{}}}],["log",{"_index":253,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["match",{"_index":29,"title":{},"body":{"interfaces/SegmentConfig.html":{},"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"injectables/WindowWrapper.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["merchant",{"_index":405,"title":{},"body":{"license.html":{}}}],["merg",{"_index":386,"title":{},"body":{"license.html":{}}}],["messag",{"_index":255,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["metadata.json",{"_index":359,"title":{},"body":{"index.html":{}}}],["method",{"_index":33,"title":{},"body":{"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{}}}],["millisecond",{"_index":286,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["miscellan",{"_index":308,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":365,"title":{},"body":{"index.html":{},"license.html":{}}}],["mode",{"_index":23,"title":{},"body":{"interfaces/SegmentConfig.html":{},"interfaces/SegmentPlugin.html":{}}}],["modifi",{"_index":385,"title":{},"body":{"license.html":{}}}],["modul",{"_index":30,"title":{"modules/SegmentModule.html":{},"modules.html":{}},"body":{"modules/SegmentModule.html":{},"injectables/WindowWrapper.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["modulewithprovid",{"_index":45,"title":{},"body":{"modules/SegmentModule.html":{},"injectables/WindowWrapper.html":{}}}],["name",{"_index":41,"title":{},"body":{"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["new",{"_index":63,"title":{},"body":{"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"injectables/WindowWrapper.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["new(play",{"_index":99,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["ngmodul",{"_index":47,"title":{},"body":{"modules/SegmentModule.html":{},"injectables/WindowWrapper.html":{},"index.html":{}}}],["ngoninit",{"_index":342,"title":{},"body":{"index.html":{}}}],["ngx",{"_index":57,"title":{},"body":{"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"injectables/WindowWrapper.html":{},"index.html":{}}}],["noninfring",{"_index":409,"title":{},"body":{"license.html":{}}}],["notic",{"_index":397,"title":{},"body":{"license.html":{}}}],["npm",{"_index":318,"title":{},"body":{"index.html":{}}}],["npmj",{"_index":362,"title":{},"body":{"index.html":{}}}],["null",{"_index":87,"title":{},"body":{"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"injectables/WindowWrapper.html":{}}}],["number",{"_index":289,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["object",{"_index":351,"title":{},"body":{"index.html":{}}}],["obtain",{"_index":377,"title":{},"body":{"license.html":{}}}],["offici",{"_index":313,"title":{},"body":{"index.html":{}}}],["on(method",{"_index":267,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["on/off",{"_index":252,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["onc",{"_index":140,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["oninit",{"_index":332,"title":{},"body":{"index.html":{}}}],["opendecid",{"_index":367,"title":{},"body":{"index.html":{},"license.html":{}}}],["option",{"_index":12,"title":{},"body":{"interfaces/SegmentConfig.html":{},"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"injectables/WindowWrapper.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["organ",{"_index":204,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["other",{"_index":101,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["otherwis",{"_index":419,"title":{},"body":{"license.html":{}}}],["out",{"_index":421,"title":{},"body":{"license.html":{},"overview.html":{}}}],["overview",{"_index":425,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["page",{"_index":139,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["page(categori",{"_index":201,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["page(nam",{"_index":199,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["pageview",{"_index":132,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["param",{"_index":83,"title":{},"body":{"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"injectables/WindowWrapper.html":{}}}],["paramet",{"_index":40,"title":{},"body":{"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["parentmodul",{"_index":86,"title":{},"body":{"modules/SegmentModule.html":{},"injectables/WindowWrapper.html":{}}}],["parti",{"_index":214,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["particular",{"_index":407,"title":{},"body":{"license.html":{}}}],["pass",{"_index":275,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["perform",{"_index":188,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["permiss",{"_index":371,"title":{},"body":{"license.html":{}}}],["permit",{"_index":391,"title":{},"body":{"license.html":{}}}],["person",{"_index":376,"title":{},"body":{"license.html":{}}}],["platform_id",{"_index":51,"title":{},"body":{"modules/SegmentModule.html":{},"injectables/WindowWrapper.html":{}}}],["platformid",{"_index":310,"title":{},"body":{"miscellaneous/functions.html":{}}}],["platoon",{"_index":209,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["plugin",{"_index":98,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["pluginnam",{"_index":292,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["portion",{"_index":400,"title":{},"body":{"license.html":{}}}],["previou",{"_index":231,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["previous",{"_index":226,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["previousid",{"_index":230,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["privat",{"_index":107,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["project",{"_index":205,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["promis",{"_index":182,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["promise((resolv",{"_index":183,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["properti",{"_index":11,"title":{},"body":{"interfaces/SegmentConfig.html":{},"interfaces/SegmentPlugin.html":{},"injectables/WindowWrapper.html":{},"index.html":{}}}],["provid",{"_index":75,"title":{},"body":{"modules/SegmentModule.html":{},"injectables/WindowWrapper.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"overview.html":{}}}],["public",{"_index":73,"title":{},"body":{"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"injectables/WindowWrapper.html":{},"index.html":{}}}],["publish",{"_index":361,"title":{},"body":{"index.html":{},"license.html":{}}}],["purpos",{"_index":408,"title":{},"body":{"license.html":{}}}],["readi",{"_index":137,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["recogn",{"_index":232,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["recogniz",{"_index":173,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["record",{"_index":187,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["registri",{"_index":363,"title":{},"body":{"index.html":{}}}],["reset",{"_index":134,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{},"overview.html":{}}}],["resolve(thi",{"_index":185,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["restrict",{"_index":382,"title":{},"body":{"license.html":{}}}],["result",{"_index":28,"title":{},"body":{"interfaces/SegmentConfig.html":{},"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"injectables/WindowWrapper.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":44,"title":{},"body":{"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"injectables/WindowWrapper.html":{},"index.html":{}}}],["right",{"_index":384,"title":{},"body":{"license.html":{}}}],["run",{"_index":261,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["same",{"_index":218,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["save",{"_index":319,"title":{},"body":{"index.html":{}}}],["script",{"_index":150,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["script.async",{"_index":154,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["script.src",{"_index":155,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["script.typ",{"_index":152,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["segment",{"_index":6,"title":{},"body":{"interfaces/SegmentConfig.html":{},"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"injectables/WindowWrapper.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["segment.io",{"_index":21,"title":{},"body":{"interfaces/SegmentConfig.html":{}}}],["segment_config",{"_index":62,"title":{},"body":{"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"injectables/WindowWrapper.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["segmentconfig",{"_index":1,"title":{"interfaces/SegmentConfig.html":{}},"body":{"interfaces/SegmentConfig.html":{},"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"injectables/WindowWrapper.html":{},"coverage.html":{}}}],["segmentmodul",{"_index":31,"title":{"modules/SegmentModule.html":{}},"body":{"modules/SegmentModule.html":{},"injectables/WindowWrapper.html":{},"index.html":{},"modules.html":{}}}],["segmentmodule.forroot",{"_index":327,"title":{},"body":{"index.html":{}}}],["segmentplugin",{"_index":93,"title":{"interfaces/SegmentPlugin.html":{}},"body":{"interfaces/SegmentPlugin.html":{},"coverage.html":{},"index.html":{}}}],["segmentservic",{"_index":56,"title":{},"body":{"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"injectables/WindowWrapper.html":{},"coverage.html":{},"index.html":{}}}],["selector",{"_index":333,"title":{},"body":{"index.html":{}}}],["sell",{"_index":390,"title":{},"body":{"license.html":{}}}],["send",{"_index":345,"title":{},"body":{"index.html":{}}}],["servic",{"_index":330,"title":{},"body":{"index.html":{}}}],["set",{"_index":259,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["shall",{"_index":398,"title":{},"body":{"license.html":{}}}],["skipself",{"_index":48,"title":{},"body":{"modules/SegmentModule.html":{},"injectables/WindowWrapper.html":{}}}],["snippet",{"_index":122,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["societi",{"_index":215,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["softwar",{"_index":379,"title":{},"body":{"license.html":{}}}],["soon",{"_index":240,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"interfaces/SegmentConfig.html":{},"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"injectables/WindowWrapper.html":{}}}],["src/.../ngx",{"_index":309,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/ngx",{"_index":5,"title":{},"body":{"interfaces/SegmentConfig.html":{},"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"injectables/WindowWrapper.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":312,"title":{"index.html":{},"license.html":{}},"body":{}}],["statement",{"_index":296,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":34,"title":{},"body":{"modules/SegmentModule.html":{},"injectables/WindowWrapper.html":{}}}],["statu",{"_index":24,"title":{},"body":{"interfaces/SegmentConfig.html":{}}}],["string",{"_index":16,"title":{},"body":{"interfaces/SegmentConfig.html":{},"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["styleurl",{"_index":337,"title":{},"body":{"index.html":{}}}],["subject",{"_index":393,"title":{},"body":{"license.html":{}}}],["sublicens",{"_index":388,"title":{},"body":{"license.html":{}}}],["submiss",{"_index":282,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["substanti",{"_index":399,"title":{},"body":{"license.html":{}}}],["tabl",{"_index":307,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":306,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":350,"title":{},"body":{"index.html":{}}}],["team",{"_index":207,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["templateurl",{"_index":335,"title":{},"body":{"index.html":{}}}],["text/javascript",{"_index":153,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this.config.apikey",{"_index":112,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this.config.debug",{"_index":125,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this.config.loadoniniti",{"_index":110,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this.debug(this.config.debug",{"_index":169,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this.doc.createelement('script",{"_index":151,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this.doc.getelementsbytagname('script')[0",{"_index":159,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this.load(this.config.apikey",{"_index":164,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this.segment.track('load",{"_index":343,"title":{},"body":{"index.html":{}}}],["this.w.analyt",{"_index":116,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this.w.analytics._loadopt",{"_index":161,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this.w.analytics.alias(userid",{"_index":236,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this.w.analytics.debug(en",{"_index":258,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this.w.analytics.factori",{"_index":141,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this.w.analytics.factory(method",{"_index":147,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this.w.analytics.group(groupid",{"_index":223,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this.w.analytics.id",{"_index":246,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this.w.analytics.identify(userid",{"_index":184,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this.w.analytics.initi",{"_index":117,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this.w.analytics.invok",{"_index":119,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this.w.analytics.load",{"_index":148,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this.w.analytics.load(apikey",{"_index":168,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this.w.analytics.method",{"_index":127,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this.w.analytics.methods.foreach((method",{"_index":145,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this.w.analytics.on(method",{"_index":268,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this.w.analytics.page(categori",{"_index":202,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this.w.analytics.plugin",{"_index":293,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this.w.analytics.push(arg",{"_index":144,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this.w.analytics.ready(resolve(thi",{"_index":244,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this.w.analytics.reset",{"_index":250,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this.w.analytics.snippet_vers",{"_index":162,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this.w.analytics.timeout(timeout",{"_index":291,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this.w.analytics.track(ev",{"_index":192,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this.w.analytics.trackform(form",{"_index":284,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this.w.analytics.tracklink(el",{"_index":279,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this.w.analytics.trait",{"_index":247,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this.w.analytics.us",{"_index":245,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this.w.analytics[method",{"_index":146,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["throw",{"_index":89,"title":{},"body":{"modules/SegmentModule.html":{},"injectables/WindowWrapper.html":{}}}],["timeout",{"_index":288,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["timeout(timeout",{"_index":290,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["token",{"_index":60,"title":{},"body":{"modules/SegmentModule.html":{},"injectables/WindowWrapper.html":{},"miscellaneous/variables.html":{}}}],["tort",{"_index":418,"title":{},"body":{"license.html":{}}}],["track",{"_index":136,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["track(ev",{"_index":191,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["trackclick",{"_index":129,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["trackform",{"_index":131,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["trackform(form",{"_index":283,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["tracklink",{"_index":130,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["tracklink(el",{"_index":277,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["tracksubmit",{"_index":128,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["trait",{"_index":175,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["tribe",{"_index":208,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["troop",{"_index":212,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["true",{"_index":120,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["ts",{"_index":354,"title":{},"body":{"index.html":{}}}],["turn",{"_index":251,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["twice",{"_index":124,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["two",{"_index":225,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["type",{"_index":17,"title":{},"body":{"interfaces/SegmentConfig.html":{},"modules/SegmentModule.html":{},"injectables/WindowWrapper.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["typeof",{"_index":111,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["unassoci",{"_index":227,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["undefin",{"_index":113,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["univers",{"_index":316,"title":{},"body":{"index.html":{}}}],["up",{"_index":217,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["us",{"_index":276,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{},"license.html":{}}}],["usefactori",{"_index":80,"title":{},"body":{"modules/SegmentModule.html":{},"injectables/WindowWrapper.html":{}}}],["user",{"_index":171,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["userid",{"_index":174,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["user’",{"_index":234,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["usevalu",{"_index":84,"title":{},"body":{"modules/SegmentModule.html":{},"injectables/WindowWrapper.html":{}}}],["valu",{"_index":431,"title":{},"body":{"miscellaneous/variables.html":{}}}],["variabl",{"_index":301,"title":{"miscellaneous/variables.html":{}},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["video",{"_index":97,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["view",{"_index":193,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["void",{"_index":167,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["void;develop",{"_index":352,"title":{},"body":{"index.html":{}}}],["w",{"_index":103,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["want",{"_index":229,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["warranti",{"_index":401,"title":{},"body":{"license.html":{}}}],["websit",{"_index":194,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["whether",{"_index":416,"title":{},"body":{"license.html":{}}}],["window",{"_index":65,"title":{},"body":{"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"injectables/WindowWrapper.html":{},"miscellaneous/functions.html":{}}}],["windowwrapp",{"_index":70,"title":{"injectables/WindowWrapper.html":{}},"body":{"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"injectables/WindowWrapper.html":{},"coverage.html":{}}}],["without",{"_index":381,"title":{},"body":{"license.html":{}}}],["workspac",{"_index":206,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["wrapper",{"_index":66,"title":{},"body":{"modules/SegmentModule.html":{},"injectables/WindowWrapper.html":{}}}],["write",{"_index":165,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["ye",{"_index":43,"title":{},"body":{"modules/SegmentModule.html":{}}}],["your_write_apikey",{"_index":328,"title":{},"body":{"index.html":{}}}],["you’r",{"_index":190,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["zoom",{"_index":428,"title":{},"body":{"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/SegmentConfig.html":{"url":"interfaces/SegmentConfig.html","title":"interface - SegmentConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SegmentConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/ngx-segment-analytics.config.ts\n        \n\n            \n                Description\n            \n            \n                Segment Configuration Interface\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        apiKey\n                                \n                                \n                                            Optional\n                                        debug\n                                \n                                \n                                            Optional\n                                        loadOnInitialization\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        apiKey\n                                    \n                                \n                                \n                                    \n                                        apiKey:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    API Key for Segment.io \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        debug\n                                    \n                                \n                                \n                                    \n                                        debug:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Debug mode status \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loadOnInitialization\n                                    \n                                \n                                \n                                    \n                                        loadOnInitialization:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Load Segment configuration on initialization \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface SegmentConfig {\n    /** API Key for Segment.io */\n    apiKey?: string;\n    /** Debug mode status */\n    debug?: boolean;\n    /** Load Segment configuration on initialization */\n    loadOnInitialization?: boolean;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SegmentModule.html":{"url":"modules/SegmentModule.html","title":"module - SegmentModule","body":"\n                   \n\n\n\n\n    Modules\n    SegmentModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/ngx-segment-analytics.module.ts\n        \n\n\n        \n            Description\n        \n        \n            Segment Module\n\n        \n\n\n        \n            \n            \n        \n\n        \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            forRoot\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        forRoot(config?: SegmentConfig)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/ngx-segment-analytics.module.ts:43\n                            \n                        \n\n\n                \n                    \n                            Segment Module Initialisation\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                        \n                                                                    SegmentConfig\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                        \n                                                                Segment Configuration\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     ModuleWithProviders\n\n                            \n                                \n                                    Segment Module\n\n                                \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule, ModuleWithProviders, Optional, SkipSelf, InjectionToken, Injectable, PLATFORM_ID } from '@angular/core';\nimport { CommonModule, isPlatformBrowser } from '@angular/common';\nimport { SegmentService } from './ngx-segment-analytics.service';\nimport { SegmentConfig } from './ngx-segment-analytics.config';\n\n/** Segment Configuration Injection Token */\nexport const SEGMENT_CONFIG: InjectionToken = new InjectionToken('ngx-segment-analytics.config');\n\n/**\n * Window Wrapper for Angular AOT\n */\n@Injectable()\nexport class WindowWrapper {\n    /** Segment Analytics.js instance */\n    public analytics: any;\n}\n\n/**\n * Window Provider for Angular AOT\n * @returns Browser Window instance\n */\nexport function getWindow(platformId: any) {\n  return isPlatformBrowser(platformId) ? window : {};\n}\n\n/**\n * Segment Module\n */\n@NgModule({\n    imports: [CommonModule],\n    providers: [\n        { provide: WindowWrapper, useFactory: getWindow, deps: [PLATFORM_ID] }\n    ]\n})\nexport class SegmentModule {\n\n    /**\n     * Segment Module Initialisation\n     *\n     * @param config Segment Configuration\n     * @returns Segment Module\n     */\n    public static forRoot(config?: SegmentConfig): ModuleWithProviders {\n        return {\n            ngModule: SegmentModule,\n            providers: [\n                { provide: SEGMENT_CONFIG, useValue: config },\n                SegmentService,\n            ],\n        };\n    }\n\n    /**\n     * Segment Module Constructor\n     *\n     * @param parentModule Must be null\n     */\n    constructor(@Optional() @SkipSelf() parentModule: SegmentModule) {\n        if (parentModule) {\n            throw new Error('SegmentModule is already loaded. Import it in the AppModule only');\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SegmentPlugin.html":{"url":"interfaces/SegmentPlugin.html","title":"interface - SegmentPlugin","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SegmentPlugin\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/ngx-segment-analytics.service.ts\n        \n\n\n\n\n\n\n    \n\n\n    \n        import {Inject, Injectable} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\nimport {SEGMENT_CONFIG, WindowWrapper} from './ngx-segment-analytics.module';\nimport {SegmentConfig} from './ngx-segment-analytics.config';\n\nexport interface SegmentPlugin {\n    // Video Plugins\n    new(player: any, accessToken: string): any;\n\n    // Others plugins\n    new(): any;\n}\n\n/** @dynamic */\n@Injectable()\nexport class SegmentService {\n\n    /**\n     * @param w Browser window\n     * @param doc Browser DOM\n     * @param config Segment configuration\n     */\n    constructor(\n        @Inject(WindowWrapper) private w: WindowWrapper,\n        @Inject(DOCUMENT) private doc: Document,\n        @Inject(SEGMENT_CONFIG) private config: SegmentConfig\n    ) {\n        if (this.config.loadOnInitialization && (typeof this.config.apiKey === 'undefined' || this.config.apiKey === '')) {\n            console.error('The API Key cannot be an empty string if Segment must be loaded on initialization.');\n            return;\n        }\n\n        if (\n            typeof this.w.analytics === 'undefined'\n            || typeof this.w.analytics.initialize === 'undefined'\n            || this.w.analytics.initialize === false\n        ) {\n            if (this.w.analytics.invoked === true) {\n                console.error('Segment snippet included twice.');\n                return;\n            }\n\n            if (this.config.debug) {\n                console.log('Segment initialization ...');\n            }\n\n            this.w.analytics = [];\n            this.w.analytics.invoked = true;\n\n            this.w.analytics.methods = [\n                'trackSubmit',\n                'trackClick',\n                'trackLink',\n                'trackForm',\n                'pageview',\n                'identify',\n                'reset',\n                'group',\n                'track',\n                'ready',\n                'alias',\n                'debug',\n                'page',\n                'once',\n                'off',\n                'on',\n            ];\n\n            this.w.analytics.factory = (method: string) => {\n                return (...args) => {\n                    args.unshift(method);\n                    this.w.analytics.push(args);\n                    return this.w.analytics;\n                };\n            };\n\n            this.w.analytics.methods.forEach((method: string) => {\n                this.w.analytics[method] = this.w.analytics.factory(method);\n            });\n\n            this.w.analytics.load = (key: string, options: { integrations: { [key: string]: boolean } }) => {\n                const script = this.doc.createElement('script');\n                script.type = 'text/javascript';\n                script.async = true;\n                script.src = 'https://cdn.segment.com/analytics.js/v1/' + key + '/analytics.min.js';\n\n                const first = this.doc.getElementsByTagName('script')[0];\n                first.parentNode.insertBefore(script, first);\n                this.w.analytics._loadOptions = options;\n            };\n\n            this.w.analytics.SNIPPET_VERSION = '4.1.0';\n            if (this.config.loadOnInitialization) {\n                this.load(this.config.apiKey);\n            }\n        }\n    }\n\n    /**\n     * Load Segment configuration.\n     *\n     * @param apiKey Write API Key\n     * @param options Optional parameters\n     */\n    public load(apiKey: string, options?: any): void {\n        this.w.analytics.load(apiKey, options);\n        if (this.config.debug) {\n            console.log('Segment initialized');\n        }\n        this.debug(this.config.debug);\n    }\n\n    /**\n     * The identify method is how you associate your users and their actions to a recognizable userId and traits.\n     *\n     * @param userId The database ID for the user.\n     * @param traits A dictionary of traits you know about the user, like their email or name\n     * @param options A dictionary of options.\n     *\n     * @returns\n     */\n    public identify(userId?: string, traits?: any, options?: any): Promise {\n        return new Promise((resolve) => {\n            this.w.analytics.identify(userId, traits, options, resolve(this));\n        });\n    }\n\n    /**\n     * The track method lets you record any actions your users perform.\n     *\n     * @param event The name of the event you’re tracking.\n     * @param properties A dictionary of properties for the event.\n     * @param options A dictionary of options.\n     *\n     * @returns\n     */\n    public track(event: string, properties?: any, options?: any): Promise {\n        return new Promise((resolve) => {\n            this.w.analytics.track(event, properties, options, resolve(this));\n        });\n    }\n\n    /**\n     * The page method lets you record page views on your website, along with optional extra information about the page being viewed.\n     *\n     * @param name The name of the page.\n     * @param properties A dictionary of properties of the page.\n     * @param options A dictionary of options.\n     *\n     * @returns\n     */\n    public page(name?: string, properties?: any, options?: any): Promise;\n\n    /**\n     * The page method lets you record page views on your website, along with optional extra information about the page being viewed.\n     *\n     * @param category The category of the page.\n     * @param name The name of the page.\n     * @param properties A dictionary of properties of the page.\n     * @param options A dictionary of options.\n     *\n     * @returns\n     */\n    public page(category: string, name: string, properties?: any, options?: any): Promise;\n\n    /**\n     * The page method lets you record page views on your website, along with optional extra information about the page being viewed.\n     *\n     * @param category The category of the page.\n     * @param name The name of the page.\n     * @param properties A dictionary of properties of the page.\n     * @param options A dictionary of options.\n     *\n     * @returns\n     */\n    public page(category?: string, name?: string, properties?: any, options?: any): Promise {\n        return new Promise((resolve) => {\n            this.w.analytics.page(category, name, properties, options, resolve(this));\n        });\n    }\n\n    /**\n     * The group method associates an identified user with a company, organization, project, workspace, team, tribe, platoon,\n     * assemblage, cluster, troop, gang, party, society or any other name you came up with for the same concept.\n     *\n     * @param groupId The Group ID to associate with the current user.\n     * @param traits A dictionary of traits for the group.\n     *\n     * @returns\n     */\n    public group(groupId: string, traits?: any): Promise {\n        return new Promise((resolve) => {\n            this.w.analytics.group(groupId, traits, resolve(this));\n        });\n    }\n\n    /**\n     * The alias method combines two previously unassociated user identities.\n     *\n     * @param userId The new user ID you want to associate with the user.\n     * @param previousId The previous ID that the user was recognized by. This defaults to the currently identified user’s ID.\n     * @param options A dictionary of options.\n     *\n     * @returns\n     */\n    public alias(userId: string, previousId?: string, options?: any): Promise {\n        return new Promise((resolve) => {\n            this.w.analytics.alias(userId, previousId, options, resolve(this));\n        });\n    }\n\n    /**\n     * The ready method allows you execute a promise that will be called as soon as all of your enabled destinations have loaded\n     * and analytics.js has completed initialization.\n     *\n     * @returns\n     */\n    public ready(): Promise {\n        return new Promise((resolve) => {\n            this.w.analytics.ready(resolve(this));\n        });\n    }\n\n    /**\n     * Return informations about the currently identified user\n     *\n     * @returns Informations about the currently identified user\n     */\n    public user(): any {\n        return this.w.analytics.user();\n    }\n\n    /**\n     * Return identifier about the currently identified user\n     *\n     * @returns Identifier about the currently identified user\n     */\n    public id(): string | null {\n        return this.w.analytics.id();\n    }\n\n    /**\n     * Return traits about the currently identified user\n     *\n     * @returns Traits about the currently identified user\n     */\n    public traits(): any {\n        return this.w.analytics.traits();\n    }\n\n    /**\n     * Reset the id, including anonymousId, and clear traits for the currently identified user and group.\n     */\n    public reset(): void {\n        this.w.analytics.reset();\n    }\n\n    /**\n     * Turn on/off debug mode, logging helpful messages to the console.\n     *\n     * @param enabled Enable or not the debug mode\n     */\n    public debug(enabled?: boolean): void {\n        this.w.analytics.debug(enabled);\n    }\n\n    /**\n     * Set listeners for these events and run your own custom code.\n     *\n     * @param method Name of the method to listen for\n     * @param callback A function to execute after each the emitted method\n     */\n    public on(method: string, callback: (event?: string, properties?: any, options?: any) => any): void {\n        this.w.analytics.on(method, callback);\n    }\n\n    /**\n     * Attaches the `track` call as a handler to a link\n     *\n     * @param elements DOM element or an array of DOM elements to be bound with track method.\n     * @param event The name of the event, passed to the `track` method or a function that returns a string to be used\n     *              as the name of the track event.\n     * @param properties A dictionary of properties to pass with the `track` method.\n     */\n    public trackLink(elements: HTMLElement | HTMLElement[], event: string | Function, properties?: any | Function): void {\n        this.w.analytics.trackLink(elements, event, properties);\n    }\n\n    /**\n     * Binds a `track` call to a form submission.\n     *\n     * @param forms The form element to track or an array of form\n     * @param event The name of the event, passed to the `track` method.\n     * @param properties A dictionary of properties to pass with the `track` method.\n     */\n    public trackForm(forms: HTMLElement | HTMLElement[], event: string | Function, properties?: any | Function): void {\n        this.w.analytics.trackForm(forms, event, properties);\n    }\n\n    /**\n     * Set the length (in milliseconds) of the callbacks and helper functions\n     *\n     * @param timeout Number of milliseconds\n     */\n    public timeout(timeout: number): void {\n        this.w.analytics.timeout(timeout);\n    }\n\n    public get plugins(): { [pluginName: string]: SegmentPlugin } {\n        return this.w.analytics.plugins;\n    }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WindowWrapper.html":{"url":"injectables/WindowWrapper.html","title":"injectable - WindowWrapper","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  WindowWrapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/ngx-segment-analytics.module.ts\n        \n\n            \n                Description\n            \n            \n                Window Wrapper for Angular AOT\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                analytics\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            analytics\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        analytics:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/ngx-segment-analytics.module.ts:15\n                            \n                        \n\n                \n                    \n                        Segment Analytics.js instance \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { NgModule, ModuleWithProviders, Optional, SkipSelf, InjectionToken, Injectable, PLATFORM_ID } from '@angular/core';\nimport { CommonModule, isPlatformBrowser } from '@angular/common';\nimport { SegmentService } from './ngx-segment-analytics.service';\nimport { SegmentConfig } from './ngx-segment-analytics.config';\n\n/** Segment Configuration Injection Token */\nexport const SEGMENT_CONFIG: InjectionToken = new InjectionToken('ngx-segment-analytics.config');\n\n/**\n * Window Wrapper for Angular AOT\n */\n@Injectable()\nexport class WindowWrapper {\n    /** Segment Analytics.js instance */\n    public analytics: any;\n}\n\n/**\n * Window Provider for Angular AOT\n * @returns Browser Window instance\n */\nexport function getWindow(platformId: any) {\n  return isPlatformBrowser(platformId) ? window : {};\n}\n\n/**\n * Segment Module\n */\n@NgModule({\n    imports: [CommonModule],\n    providers: [\n        { provide: WindowWrapper, useFactory: getWindow, deps: [PLATFORM_ID] }\n    ]\n})\nexport class SegmentModule {\n\n    /**\n     * Segment Module Initialisation\n     *\n     * @param config Segment Configuration\n     * @returns Segment Module\n     */\n    public static forRoot(config?: SegmentConfig): ModuleWithProviders {\n        return {\n            ngModule: SegmentModule,\n            providers: [\n                { provide: SEGMENT_CONFIG, useValue: config },\n                SegmentService,\n            ],\n        };\n    }\n\n    /**\n     * Segment Module Constructor\n     *\n     * @param parentModule Must be null\n     */\n    constructor(@Optional() @SkipSelf() parentModule: SegmentModule) {\n        if (parentModule) {\n            throw new Error('SegmentModule is already loaded. Import it in the AppModule only');\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/ngx-segment-analytics.config.ts\n            \n            \n                interface\n            \n            \n                SegmentConfig\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/ngx-segment-analytics.module.ts\n            \n            \n                injectable\n            \n            \n                WindowWrapper\n            \n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/ngx-segment-analytics.module.ts\n            \n            \n                function\n            \n            \n                getWindow\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/ngx-segment-analytics.module.ts\n            \n            \n                variable\n            \n            \n                SEGMENT_CONFIG\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/ngx-segment-analytics.service.ts\n            \n            \n                injectable\n            \n            \n                SegmentService\n            \n            \n                90 %\n                (18/20)\n            \n        \n        \n            \n                \n                src/ngx-segment-analytics.service.ts\n            \n            \n                interface\n            \n            \n                SegmentPlugin\n            \n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            getWindow   (src/.../ngx-segment-analytics.module.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/ngx-segment-analytics.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            getWindow\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetWindow(platformId: any)\n                    \n                \n\n\n\n\n                \n                    \n                            Window Provider for Angular AOT\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        platformId\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nngx-segment-analytics\n\n\n\n\n\n\n\nThis Angular module provides an API for Segment using the analytics.js official library.\nCompatible with Angular AOT and Universal.\nInstallation\nTo install this library, run:\n$ npm install --save ngx-segment-analyticsConsuming Segment\nAdd the SegmentModule to your Angular AppModule:\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\n\n// Import the Segment module\nimport { SegmentModule } from 'ngx-segment-analytics';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    // Segment Importation\n    SegmentModule.forRoot({ apiKey: 'YOUR_WRITE_APIKEY', debug: true, loadOnInitialization: true })\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }You can use the SegmentService in any constructor as a injected service :\nimport { Component, OnInit } from '@angular/core';\nimport { SegmentService } from 'ngx-segment-analytics';\n@Component({\n    selector: 'hero',\n    templateUrl: './hero.component.html',\n    styleUrls: ['./hero.component.css']\n})\nexport class HeroComponent implements OnInit {\n\n    constructor(private segment: SegmentService) { }\n\n    public ngOnInit() {\n        this.segment.track('load an hero')\n            .then(() => console.log(\"Event sended\"));\n    }\n\n}Documentation\nA full documentation is available here\nAPI\nThis API is compatible with analytics.js but returns Promises instead of taking callbacks in parameters.\nload(apiKey: string, options: any);\nget plugins: {[pluginName :string]: SegmentPlugin};\nidentify(userId?: string, traits?: any, options?: any): Promise;\ntrack(event: string, properties?: any, options?: any): Promise;\npage(category?: string, name?: string, properties?: any, options?: any): Promise;\ngroup(groupId: string, traits?: any): Promise;\nalias(userId: string, previousId?: string, options?: any): Promise;\nready(): Promise;\nuser(): any;\nid(): any;\ntraits(): any;\nreset(): void;\ndebug(enabled?: boolean): void;\non(method: string, callback: (event?: string, properties?: any, options?: any) => any): void;\ntrackLink(elements: HTMLElement | HTMLElement[], event: string | Function, properties?: Object | Function): void;\ntrackForm(forms: HTMLElement | HTMLElement[], event: string | Function, properties?: Object | Function): void;\ntimeout(timeout: number): void;Development\nTo lint all *.ts files:\n$ npm run lintTo generate all *.js, *.d.ts and *.metadata.json files:\n$ npm run buildTo publish on npmjs registry :\n$ npm publish distLicense\nMIT ©2017 OpenDecide\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nThe MIT License (MIT)\nCopyright (c) 2017 OpenDecide\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        SegmentModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            SEGMENT_CONFIG   (src/.../ngx-segment-analytics.module.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/ngx-segment-analytics.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            SEGMENT_CONFIG\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        SEGMENT_CONFIG:     InjectionToken\n\n                    \n                \n                    \n                        \n                            Type :     InjectionToken\n\n                        \n                    \n                    \n                        \n                            Default value : new InjectionToken('ngx-segment-analytics.config')\n                        \n                    \n\n                \n                    \n                        Segment Configuration Injection Token \n\n                    \n                \n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
