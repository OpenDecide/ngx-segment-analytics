var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.6","fields":["title","body"],"fieldVectors":[["title/interfaces/SegmentConfig.html",[0,0.833,1,0.654]],["body/interfaces/SegmentConfig.html",[0,1.21,1,0.951,2,1.477,3,1.175,4,1.175,5,0.935,6,0.563,7,0.666,8,1.88,9,1.477,10,1.342,11,0.935,12,1.522,13,1.554,14,2.242,15,2.379,16,2.854,17,2.854,18,2.379,19,1.116,20,0.089,21,1.912,22,2.434,23,3.226,24,2.379,25,2.434,26,3.226,27,2.434,28,2.434,29,3.226,30,3.226,31,3.226,32,0.935,33,0.051,34,0.066,35,0.051]],["title/modules/SegmentModule.html",[36,0.833,37,0.833]],["body/modules/SegmentModule.html",[1,1.006,3,0.914,4,0.914,5,0.727,6,0.615,7,0.699,9,1.613,10,1.181,13,1.021,19,0.571,20,0.091,32,1.28,33,0.04,34,0.056,35,0.04,36,1.437,37,1.28,38,1.148,39,0.727,40,1.937,41,2.053,42,1.937,43,2.053,44,1.461,45,1.937,46,2.053,47,0.914,48,0.914,49,2.374,50,1.937,51,1.484,52,2.374,53,1.696,54,1.021,55,1.613,56,1.864,57,2.053,58,2.053,59,0.914,60,2.053,61,1.461,62,1.148,63,1.021,64,1.284,65,1.461,66,1.284,67,1.148,68,1.148,69,1.148,70,1.021,71,1.021,72,1.148,73,1.61,74,1.461,75,1.284,76,1.284,77,1.284,78,1.021,79,0.914,80,2.053,81,1.284,82,1.148,83,1.148,84,0.914,85,0.727,86,1.148,87,1.613,88,1.461,89,1.148,90,1.284,91,2.053,92,1.461,93,0.914,94,1.461,95,1.613,96,1.461,97,0.914,98,2.374,99,1.148,100,1.461,101,1.461,102,1.461,103,1.461,104,1.148,105,1.148]],["title/interfaces/SegmentPlugin.html",[0,0.833,106,1.047]],["body/interfaces/SegmentPlugin.html",[0,0.287,1,0.386,2,0.453,3,0.361,4,0.361,5,0.287,6,0.173,7,0.38,10,0.492,12,1.774,13,0.764,14,0.453,15,0.776,17,0.989,18,2.245,20,0.092,21,0.453,22,1.537,24,1.019,25,0.989,27,0.577,28,0.577,32,0.492,33,0.016,34,0.027,35,0.016,47,0.361,48,1.645,51,1.525,53,0.961,54,0.492,59,0.361,62,0.453,63,0.287,64,0.618,66,0.361,69,1.019,70,0.287,71,1.058,73,0.361,77,0.361,78,0.492,79,0.361,81,1.71,84,0.618,85,0.938,87,2.035,95,2.389,97,0.361,99,0.453,104,0.453,106,0.811,107,0.577,108,0.765,109,1.31,110,0.765,111,0.765,112,1.297,113,0.765,114,0.765,115,0.765,116,0.765,117,1.31,118,1.31,119,1.719,120,1.31,121,0.765,122,1.719,123,0.765,124,0.765,125,1.31,126,1.719,127,0.989,128,0.765,129,0.765,130,0.765,131,0.765,132,0.765,133,0.765,134,0.765,135,0.765,136,1.31,137,0.765,138,0.765,139,2.93,140,0.765,141,0.765,142,0.765,143,0.765,144,0.765,145,0.765,146,0.765,147,0.765,148,0.765,149,0.765,150,1.31,151,0.765,152,0.765,153,0.765,154,0.765,155,0.765,156,0.765,157,0.765,158,0.577,159,2.016,160,0.765,161,0.765,162,0.765,163,0.765,164,0.765,165,0.765,166,3.489,167,1.719,168,1.31,169,1.31,170,0.765,171,1.719,172,2.495,173,0.765,174,2.016,175,2.632,176,3.374,177,0.765,178,0.765,179,0.577,180,2.221,181,2.499,182,0.765,183,2.291,184,2.499,185,3.053,186,2.037,187,2.037,188,0.765,189,1.96,190,0.765,191,0.765,192,0.577,193,0.765,194,3.538,195,1.719,196,1.719,197,1.719,198,1.719,199,1.719,200,1.719,201,1.719,202,0.765,203,2.037,204,0.989,205,0.765,206,2.037,207,0.765,208,2.945,209,0.765,210,0.765,211,0.765,212,0.765,213,0.765,214,0.765,215,0.765,216,0.765,217,0.765,218,0.765,219,0.765,220,0.765,221,0.765,222,0.765,223,0.765,224,0.765,225,0.765,226,0.765,227,0.765,228,0.577,229,0.765,230,0.765,231,0.765,232,0.765,233,0.765,234,0.765,235,0.765,236,0.765,237,1.297,238,0.765,239,0.765,240,0.765,241,2.819,242,0.765,243,0.577,244,0.765,245,0.989,246,0.765,247,1.31,248,0.765,249,0.765,250,1.31,251,0.765,252,0.765,253,0.765,254,1.31,255,0.765,256,0.989,257,0.765,258,0.765,259,0.776,260,0.577,261,0.765,262,0.765,263,0.765,264,0.765,265,0.765,266,0.765,267,0.765,268,0.765,269,0.765,270,0.765,271,0.577,272,0.765,273,1.31,274,0.765,275,0.765,276,0.577,277,0.765,278,0.765,279,0.765,280,1.297,281,0.765,282,0.765,283,0.577,284,0.765,285,0.765,286,1.31,287,0.765,288,0.765,289,1.31,290,1.31,291,1.31,292,0.765,293,1.31,294,0.765,295,1.31,296,0.577,297,1.537,298,0.765,299,0.765,300,1.719,301,0.765,302,0.765,303,0.577,304,0.765,305,0.765,306,1.31,307,0.577,308,0.765,309,0.453,310,0.765,311,0.989,312,0.577,313,0.765,314,0.577,315,0.765]],["title/injectables/WindowWrapper.html",[54,0.833,78,0.833]],["body/injectables/WindowWrapper.html",[1,0.815,3,0.934,4,0.934,5,0.743,6,0.624,7,0.689,9,1.173,10,1.037,11,0.743,12,1.303,13,0.743,19,0.584,20,0.091,32,1.293,33,0.041,34,0.057,35,0.041,36,1.293,37,1.194,39,0.743,41,1.493,43,1.493,44,1.493,46,1.493,49,2.084,51,1.303,52,2.084,53,1.709,54,1.037,55,1.637,56,1.886,57,2.084,58,2.084,59,0.934,60,2.084,61,1.493,62,1.173,63,1.037,64,1.303,65,1.493,66,1.303,67,1.173,68,1.173,69,1.173,70,1.037,71,1.037,72,1.173,73,1.709,74,2.084,75,1.501,76,1.501,77,1.303,78,1.194,79,1.303,80,2.401,81,1.625,82,1.886,83,1.173,84,0.934,85,0.743,86,1.173,87,1.637,88,1.493,89,1.173,90,1.303,91,2.084,92,1.493,93,0.934,94,1.493,95,1.637,96,1.493,97,0.934,98,2.401,99,1.173,100,1.493,101,1.493,102,1.493,103,1.493,104,1.173,105,1.173,316,1.493,317,1.979]],["title/coverage.html",[318,2.254]],["body/coverage.html",[0,1.312,1,0.835,5,1.062,6,0.938,7,0.688,8,2.136,19,0.835,20,0.087,33,0.058,34,0.072,35,0.058,39,1.424,54,1.312,63,1.062,70,1.062,71,1.062,78,1.062,85,1.062,93,1.336,106,1.336,107,2.639,256,2.136,318,2.136,319,1.678,320,2.832,321,3.965,322,2.832,323,2.832,324,3.498,325,2.832,326,2.832,327,2.832,328,2.832,329,2.832,330,2.832,331,2.832]],["title/miscellaneous/functions.html",[309,1.575,332,0.884]],["body/miscellaneous/functions.html",[6,0.718,7,0.622,11,1.192,13,1.192,19,0.937,20,0.082,33,0.065,34,0.077,35,0.065,39,1.407,47,1.498,48,1.498,73,1.498,75,1.498,76,1.498,83,1.882,86,1.882,93,1.769,309,1.882,332,1.498,333,2.396,334,3.176]],["title/index.html",[11,0.703,335,1.413,336,1.413]],["body/index.html",[7,0.642,12,1.628,14,1.032,15,1.032,16,1.314,18,2.409,20,0.09,21,1.758,24,1.032,32,0.946,33,0.036,34,0.052,35,0.036,36,0.946,37,0.946,47,0.821,48,0.821,51,0.821,53,1.751,56,1.495,59,1.19,63,1.113,64,1.534,75,1.399,76,0.821,77,1.19,79,1.19,81,0.821,82,1.758,84,0.821,85,1.22,89,1.032,90,0.821,97,0.821,105,1.495,106,0.821,112,1.314,127,1.903,139,2.715,158,1.314,159,2.604,172,2.237,174,1.314,175,1.314,179,1.314,180,2.715,189,1.758,192,1.314,204,1.314,228,1.314,237,1.314,243,1.314,245,1.314,259,1.032,271,1.314,276,2.237,280,1.314,283,1.314,296,1.314,297,2.453,303,1.314,307,1.314,311,1.314,312,1.314,314,1.314,319,1.495,337,1.741,338,1.741,339,1.741,340,2.523,341,2.523,342,1.741,343,1.741,344,2.523,345,3.252,346,1.741,347,1.741,348,1.741,349,2.523,350,1.741,351,2.966,352,1.741,353,1.314,354,1.741,355,1.741,356,1.741,357,1.314,358,1.314,359,1.741,360,1.741,361,2.523,362,2.523,363,1.741,364,2.523,365,1.741,366,1.741,367,1.741,368,1.741,369,1.741,370,1.741,371,1.741,372,1.741,373,1.741,374,1.741,375,1.741,376,1.741,377,1.314,378,1.741,379,1.741,380,1.741,381,1.741,382,2.523,383,1.741,384,1.741,385,1.741,386,1.903,387,1.741,388,1.741,389,1.741,390,1.741,391,1.741,392,1.741,393,1.903,394,1.741,395,1.741,396,1.741,397,1.314,398,1.741,399,1.314]],["title/license.html",[335,1.413,336,1.413,400,1.413]],["body/license.html",[20,0.067,33,0.052,34,0.067,35,0.052,189,1.51,260,2.469,319,1.51,358,2.469,386,1.922,393,1.922,397,2.469,399,1.922,400,1.922,401,3.616,402,2.548,403,2.548,404,3.273,405,2.548,406,2.548,407,2.548,408,2.548,409,2.548,410,2.548,411,3.273,412,4.203,413,2.548,414,2.548,415,3.616,416,2.548,417,2.548,418,2.548,419,2.548,420,2.548,421,2.548,422,2.548,423,2.548,424,2.548,425,3.273,426,2.548,427,2.548,428,2.548,429,2.548,430,2.548,431,2.548,432,2.548,433,3.273,434,3.273,435,2.548,436,2.548,437,2.548,438,2.548,439,2.548,440,2.548,441,2.548,442,2.548,443,2.548,444,2.548,445,2.548,446,2.548,447,2.548,448,2.548,449,2.548,450,2.548,451,2.548,452,2.548,453,2.548,454,2.548,455,2.548,456,2.548,457,2.548,458,2.548,459,2.548,460,2.548,461,2.548,462,1.922,463,2.548,464,2.548]],["title/modules.html",[38,1.771]],["body/modules.html",[20,0.08,33,0.069,34,0.08,35,0.069,37,1.267,38,2,377,2.547,465,3.376,466,3.376]],["title/overview.html",[467,2.254]],["body/overview.html",[2,1.909,20,0.077,33,0.066,34,0.077,35,0.066,36,1.418,90,1.519,259,1.909,316,2.43,353,2.43,357,2.43,462,2.43,467,2.43,468,3.221,469,3.221,470,3.221,471,3.781,472,3.221,473,3.781]],["title/miscellaneous/variables.html",[332,0.884,474,2.005]],["body/miscellaneous/variables.html",[6,0.711,7,0.681,10,1.179,11,1.179,19,0.927,20,0.084,33,0.064,34,0.076,35,0.064,39,1.398,55,1.863,66,1.483,67,1.863,68,1.863,70,1.398,71,1.179,72,1.863,332,1.483,333,2.371,474,2.371,475,3.144,476,3.144]]],"invertedIndex":[["",{"_index":20,"title":{},"body":{"interfaces/SegmentConfig.html":{},"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"injectables/WindowWrapper.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":328,"title":{},"body":{"coverage.html":{}}}],["0/1",{"_index":329,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":472,"title":{},"body":{"overview.html":{}}}],["1/1",{"_index":324,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":321,"title":{},"body":{"coverage.html":{}}}],["18/20",{"_index":327,"title":{},"body":{"coverage.html":{}}}],["2",{"_index":473,"title":{},"body":{"overview.html":{}}}],["2/2",{"_index":323,"title":{},"body":{"coverage.html":{}}}],["2017",{"_index":403,"title":{},"body":{"license.html":{}}}],["2019",{"_index":398,"title":{},"body":{"index.html":{}}}],["4.1.0",{"_index":155,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["5/5",{"_index":322,"title":{},"body":{"coverage.html":{}}}],["90",{"_index":326,"title":{},"body":{"coverage.html":{}}}],["_",{"_index":183,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["_config",{"_index":120,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["_doc",{"_index":118,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["_w",{"_index":117,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["above",{"_index":432,"title":{},"body":{"license.html":{}}}],["accesstoken",{"_index":114,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["action",{"_index":457,"title":{},"body":{"license.html":{}}}],["actions",{"_index":169,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["add",{"_index":348,"title":{},"body":{"index.html":{}}}],["alias",{"_index":230,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["alias(userid",{"_index":243,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["allows",{"_index":246,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["along",{"_index":197,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["already",{"_index":103,"title":{},"body":{"modules/SegmentModule.html":{},"injectables/WindowWrapper.html":{}}}],["analytics",{"_index":82,"title":{},"body":{"modules/SegmentModule.html":{},"injectables/WindowWrapper.html":{},"index.html":{}}}],["analytics.config",{"_index":66,"title":{},"body":{"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"injectables/WindowWrapper.html":{},"miscellaneous/variables.html":{}}}],["analytics.config.ts",{"_index":8,"title":{},"body":{"interfaces/SegmentConfig.html":{},"coverage.html":{}}}],["analytics.js",{"_index":79,"title":{},"body":{"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"injectables/WindowWrapper.html":{},"index.html":{}}}],["analytics.js/v1",{"_index":148,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["analytics.min.js",{"_index":149,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["analytics.module",{"_index":110,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["analytics.module.ts",{"_index":39,"title":{},"body":{"modules/SegmentModule.html":{},"injectables/WindowWrapper.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["analytics.module.ts:15",{"_index":317,"title":{},"body":{"injectables/WindowWrapper.html":{}}}],["analytics.module.ts:43",{"_index":45,"title":{},"body":{"modules/SegmentModule.html":{}}}],["analytics.service",{"_index":65,"title":{},"body":{"modules/SegmentModule.html":{},"injectables/WindowWrapper.html":{}}}],["analytics.service.ts",{"_index":107,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"coverage.html":{}}}],["analyticsconsuming",{"_index":347,"title":{},"body":{"index.html":{}}}],["and/or",{"_index":423,"title":{},"body":{"license.html":{}}}],["angular",{"_index":75,"title":{},"body":{"modules/SegmentModule.html":{},"injectables/WindowWrapper.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["angular/common",{"_index":62,"title":{},"body":{"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"injectables/WindowWrapper.html":{}}}],["angular/core",{"_index":59,"title":{},"body":{"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"injectables/WindowWrapper.html":{},"index.html":{}}}],["angular/platform",{"_index":350,"title":{},"body":{"index.html":{}}}],["anonymousid",{"_index":261,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["aot",{"_index":76,"title":{},"body":{"modules/SegmentModule.html":{},"injectables/WindowWrapper.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["api",{"_index":21,"title":{},"body":{"interfaces/SegmentConfig.html":{},"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["apikey",{"_index":14,"title":{},"body":{"interfaces/SegmentConfig.html":{},"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["app.component",{"_index":352,"title":{},"body":{"index.html":{}}}],["appcomponent",{"_index":351,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":105,"title":{},"body":{"modules/SegmentModule.html":{},"injectables/WindowWrapper.html":{},"index.html":{}}}],["args",{"_index":129,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["args.unshift(method",{"_index":130,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["arising",{"_index":461,"title":{},"body":{"license.html":{}}}],["array",{"_index":291,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["assemblage",{"_index":216,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["associate",{"_index":167,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["associated",{"_index":413,"title":{},"body":{"license.html":{}}}],["associates",{"_index":207,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["attaches",{"_index":285,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["authors",{"_index":450,"title":{},"body":{"license.html":{}}}],["available",{"_index":377,"title":{},"body":{"index.html":{},"modules.html":{}}}],["being",{"_index":200,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["binds",{"_index":299,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["boolean",{"_index":24,"title":{},"body":{"interfaces/SegmentConfig.html":{},"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["bootstrap",{"_index":357,"title":{},"body":{"index.html":{},"overview.html":{}}}],["bound",{"_index":292,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["browse",{"_index":466,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":84,"title":{},"body":{"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"injectables/WindowWrapper.html":{},"index.html":{}}}],["browsermodule",{"_index":349,"title":{},"body":{"index.html":{}}}],["buildto",{"_index":392,"title":{},"body":{"index.html":{}}}],["c",{"_index":402,"title":{},"body":{"license.html":{}}}],["call",{"_index":286,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["callback",{"_index":280,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["callbacks",{"_index":307,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["called",{"_index":248,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["came",{"_index":222,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["category",{"_index":203,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["cdn.segment.com",{"_index":137,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["charge",{"_index":408,"title":{},"body":{"license.html":{}}}],["claim",{"_index":453,"title":{},"body":{"license.html":{}}}],["class",{"_index":77,"title":{},"body":{"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"injectables/WindowWrapper.html":{},"index.html":{}}}],["clear",{"_index":262,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["cluster",{"_index":217,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["code",{"_index":278,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["combines",{"_index":231,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["commonmodule",{"_index":60,"title":{},"body":{"modules/SegmentModule.html":{},"injectables/WindowWrapper.html":{}}}],["company",{"_index":209,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["compatibility",{"_index":128,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["compatible",{"_index":341,"title":{},"body":{"index.html":{}}}],["completed",{"_index":252,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["component",{"_index":361,"title":{},"body":{"index.html":{}}}],["concept",{"_index":225,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["conditions",{"_index":431,"title":{},"body":{"license.html":{}}}],["config",{"_index":49,"title":{},"body":{"modules/SegmentModule.html":{},"injectables/WindowWrapper.html":{}}}],["configuration",{"_index":10,"title":{},"body":{"interfaces/SegmentConfig.html":{},"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"injectables/WindowWrapper.html":{},"miscellaneous/variables.html":{}}}],["connection",{"_index":463,"title":{},"body":{"license.html":{}}}],["console",{"_index":269,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["console.log(\"event",{"_index":374,"title":{},"body":{"index.html":{}}}],["console.log('segment",{"_index":162,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["const",{"_index":69,"title":{},"body":{"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"injectables/WindowWrapper.html":{}}}],["constructor",{"_index":97,"title":{},"body":{"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"injectables/WindowWrapper.html":{},"index.html":{}}}],["constructor(@optional",{"_index":100,"title":{},"body":{"modules/SegmentModule.html":{},"injectables/WindowWrapper.html":{}}}],["constructor(private",{"_index":371,"title":{},"body":{"index.html":{}}}],["contract",{"_index":458,"title":{},"body":{"license.html":{}}}],["copies",{"_index":425,"title":{},"body":{"license.html":{}}}],["copy",{"_index":411,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":401,"title":{},"body":{"license.html":{}}}],["coverage",{"_index":318,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["current",{"_index":227,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["currently",{"_index":241,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["custom",{"_index":277,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["d.ts",{"_index":390,"title":{},"body":{"index.html":{}}}],["damages",{"_index":454,"title":{},"body":{"license.html":{}}}],["database",{"_index":173,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["deal",{"_index":414,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":464,"title":{},"body":{"license.html":{}}}],["debug",{"_index":15,"title":{},"body":{"interfaces/SegmentConfig.html":{},"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["debug(enabled",{"_index":271,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["declarations",{"_index":353,"title":{},"body":{"index.html":{},"overview.html":{}}}],["default",{"_index":475,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defaults",{"_index":240,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["defined",{"_index":44,"title":{},"body":{"modules/SegmentModule.html":{},"injectables/WindowWrapper.html":{}}}],["dependencies",{"_index":468,"title":{},"body":{"overview.html":{}}}],["deps",{"_index":94,"title":{},"body":{"modules/SegmentModule.html":{},"injectables/WindowWrapper.html":{}}}],["description",{"_index":9,"title":{},"body":{"interfaces/SegmentConfig.html":{},"modules/SegmentModule.html":{},"injectables/WindowWrapper.html":{}}}],["destinations",{"_index":251,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["dictionary",{"_index":176,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["distlicense",{"_index":396,"title":{},"body":{"index.html":{}}}],["distribute",{"_index":421,"title":{},"body":{"license.html":{}}}],["document",{"_index":109,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["documentation",{"_index":319,"title":{},"body":{"coverage.html":{},"index.html":{},"license.html":{}}}],["dom",{"_index":119,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["dynamic",{"_index":116,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["each",{"_index":281,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["element",{"_index":290,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["elements",{"_index":289,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["email",{"_index":178,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["emitted",{"_index":282,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["enable",{"_index":270,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["enabled",{"_index":250,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["error('segmentmodule",{"_index":102,"title":{},"body":{"modules/SegmentModule.html":{},"injectables/WindowWrapper.html":{}}}],["event",{"_index":189,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{},"license.html":{}}}],["events",{"_index":275,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["execute",{"_index":247,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["export",{"_index":32,"title":{},"body":{"interfaces/SegmentConfig.html":{},"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"injectables/WindowWrapper.html":{},"index.html":{}}}],["exports",{"_index":470,"title":{},"body":{"overview.html":{}}}],["express",{"_index":441,"title":{},"body":{"license.html":{}}}],["extra",{"_index":198,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/SegmentConfig.html":{},"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"injectables/WindowWrapper.html":{},"coverage.html":{}}}],["files",{"_index":386,"title":{},"body":{"index.html":{},"license.html":{}}}],["first",{"_index":150,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["first.parentnode.insertbefore(script",{"_index":152,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["fitness",{"_index":446,"title":{},"body":{"license.html":{}}}],["following",{"_index":430,"title":{},"body":{"license.html":{}}}],["form",{"_index":300,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["forms",{"_index":302,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["forroot",{"_index":42,"title":{},"body":{"modules/SegmentModule.html":{}}}],["forroot(config",{"_index":43,"title":{},"body":{"modules/SegmentModule.html":{},"injectables/WindowWrapper.html":{}}}],["free",{"_index":407,"title":{},"body":{"license.html":{}}}],["full",{"_index":376,"title":{},"body":{"index.html":{}}}],["function",{"_index":85,"title":{},"body":{"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"injectables/WindowWrapper.html":{},"coverage.html":{},"index.html":{}}}],["functions",{"_index":309,"title":{"miscellaneous/functions.html":{}},"body":{"interfaces/SegmentPlugin.html":{},"miscellaneous/functions.html":{}}}],["furnished",{"_index":428,"title":{},"body":{"license.html":{}}}],["gang",{"_index":219,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["generate",{"_index":388,"title":{},"body":{"index.html":{}}}],["getting",{"_index":335,"title":{"index.html":{},"license.html":{}},"body":{}}],["getwindow",{"_index":93,"title":{},"body":{"modules/SegmentModule.html":{},"injectables/WindowWrapper.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["getwindow(platformid",{"_index":86,"title":{},"body":{"modules/SegmentModule.html":{},"injectables/WindowWrapper.html":{},"miscellaneous/functions.html":{}}}],["granted",{"_index":406,"title":{},"body":{"license.html":{}}}],["graph",{"_index":465,"title":{},"body":{"modules.html":{}}}],["group",{"_index":206,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["group(groupid",{"_index":228,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["groupid",{"_index":226,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["handler",{"_index":287,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["helper",{"_index":308,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["helpful",{"_index":267,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["here",{"_index":378,"title":{},"body":{"index.html":{}}}],["hereby",{"_index":405,"title":{},"body":{"license.html":{}}}],["hero",{"_index":364,"title":{},"body":{"index.html":{}}}],["hero.component.css",{"_index":368,"title":{},"body":{"index.html":{}}}],["hero.component.html",{"_index":366,"title":{},"body":{"index.html":{}}}],["herocomponent",{"_index":369,"title":{},"body":{"index.html":{}}}],["holders",{"_index":451,"title":{},"body":{"license.html":{}}}],["host",{"_index":29,"title":{},"body":{"interfaces/SegmentConfig.html":{}}}],["htmlelement",{"_index":297,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["https",{"_index":147,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["id",{"_index":174,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["identified",{"_index":208,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["identifier",{"_index":256,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"coverage.html":{}}}],["identify",{"_index":165,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["identify(userid",{"_index":179,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["identities",{"_index":235,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["implements",{"_index":370,"title":{},"body":{"index.html":{}}}],["implied",{"_index":442,"title":{},"body":{"license.html":{}}}],["import",{"_index":53,"title":{},"body":{"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"injectables/WindowWrapper.html":{},"index.html":{}}}],["importation",{"_index":354,"title":{},"body":{"index.html":{}}}],["imports",{"_index":89,"title":{},"body":{"modules/SegmentModule.html":{},"injectables/WindowWrapper.html":{},"index.html":{}}}],["included",{"_index":435,"title":{},"body":{"license.html":{}}}],["including",{"_index":260,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"license.html":{}}}],["index",{"_index":11,"title":{"index.html":{}},"body":{"interfaces/SegmentConfig.html":{},"injectables/WindowWrapper.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/SegmentConfig.html":{},"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"injectables/WindowWrapper.html":{}}}],["information",{"_index":199,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["informations",{"_index":254,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["initialisation",{"_index":46,"title":{},"body":{"modules/SegmentModule.html":{},"injectables/WindowWrapper.html":{}}}],["initialization",{"_index":28,"title":{},"body":{"interfaces/SegmentConfig.html":{},"interfaces/SegmentPlugin.html":{}}}],["initialized",{"_index":163,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["inject",{"_index":108,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["inject(document",{"_index":123,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["inject(segment_config",{"_index":124,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["inject(windowwrapper",{"_index":121,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["injectable",{"_index":54,"title":{"injectables/WindowWrapper.html":{}},"body":{"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"injectables/WindowWrapper.html":{},"coverage.html":{}}}],["injectables",{"_index":316,"title":{},"body":{"injectables/WindowWrapper.html":{},"overview.html":{}}}],["injected",{"_index":359,"title":{},"body":{"index.html":{}}}],["injection",{"_index":67,"title":{},"body":{"modules/SegmentModule.html":{},"injectables/WindowWrapper.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken",{"_index":55,"title":{},"body":{"modules/SegmentModule.html":{},"injectables/WindowWrapper.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('ngx",{"_index":72,"title":{},"body":{"modules/SegmentModule.html":{},"injectables/WindowWrapper.html":{},"miscellaneous/variables.html":{}}}],["install",{"_index":344,"title":{},"body":{"index.html":{}}}],["installation",{"_index":343,"title":{},"body":{"index.html":{}}}],["instance",{"_index":80,"title":{},"body":{"modules/SegmentModule.html":{},"injectables/WindowWrapper.html":{}}}],["instead",{"_index":380,"title":{},"body":{"index.html":{}}}],["integrations",{"_index":140,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["interface",{"_index":0,"title":{"interfaces/SegmentConfig.html":{},"interfaces/SegmentPlugin.html":{}},"body":{"interfaces/SegmentConfig.html":{},"interfaces/SegmentPlugin.html":{},"coverage.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/SegmentConfig.html":{},"interfaces/SegmentPlugin.html":{},"overview.html":{}}}],["isplatformbrowser",{"_index":61,"title":{},"body":{"modules/SegmentModule.html":{},"injectables/WindowWrapper.html":{}}}],["isplatformbrowser(platformid",{"_index":88,"title":{},"body":{"modules/SegmentModule.html":{},"injectables/WindowWrapper.html":{}}}],["js",{"_index":389,"title":{},"body":{"index.html":{}}}],["key",{"_index":22,"title":{},"body":{"interfaces/SegmentConfig.html":{},"interfaces/SegmentPlugin.html":{}}}],["kind",{"_index":440,"title":{},"body":{"license.html":{}}}],["know",{"_index":177,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["legend",{"_index":469,"title":{},"body":{"overview.html":{}}}],["length",{"_index":305,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["lets",{"_index":186,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["liability",{"_index":455,"title":{},"body":{"license.html":{}}}],["liable",{"_index":452,"title":{},"body":{"license.html":{}}}],["library",{"_index":340,"title":{},"body":{"index.html":{}}}],["license",{"_index":400,"title":{"license.html":{}},"body":{"license.html":{}}}],["limitation",{"_index":417,"title":{},"body":{"license.html":{}}}],["limited",{"_index":443,"title":{},"body":{"license.html":{}}}],["link",{"_index":288,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["lint",{"_index":384,"title":{},"body":{"index.html":{}}}],["lintto",{"_index":387,"title":{},"body":{"index.html":{}}}],["listen",{"_index":279,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["listeners",{"_index":274,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["load",{"_index":27,"title":{},"body":{"interfaces/SegmentConfig.html":{},"interfaces/SegmentPlugin.html":{}}}],["load(apikey",{"_index":158,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["loaded",{"_index":104,"title":{},"body":{"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"injectables/WindowWrapper.html":{}}}],["loadoninitialization",{"_index":16,"title":{},"body":{"interfaces/SegmentConfig.html":{},"index.html":{}}}],["logging",{"_index":266,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["matching",{"_index":34,"title":{},"body":{"interfaces/SegmentConfig.html":{},"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"injectables/WindowWrapper.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["merchantability",{"_index":445,"title":{},"body":{"license.html":{}}}],["merge",{"_index":420,"title":{},"body":{"license.html":{}}}],["messages",{"_index":268,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["metadata.json",{"_index":391,"title":{},"body":{"index.html":{}}}],["method",{"_index":166,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["methods",{"_index":40,"title":{},"body":{"modules/SegmentModule.html":{}}}],["milliseconds",{"_index":306,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["miscellaneous",{"_index":332,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":397,"title":{},"body":{"index.html":{},"license.html":{}}}],["mode",{"_index":25,"title":{},"body":{"interfaces/SegmentConfig.html":{},"interfaces/SegmentPlugin.html":{}}}],["modify",{"_index":419,"title":{},"body":{"license.html":{}}}],["module",{"_index":36,"title":{"modules/SegmentModule.html":{}},"body":{"modules/SegmentModule.html":{},"injectables/WindowWrapper.html":{},"index.html":{},"overview.html":{}}}],["modules",{"_index":38,"title":{"modules.html":{}},"body":{"modules/SegmentModule.html":{},"modules.html":{}}}],["modulewithproviders",{"_index":52,"title":{},"body":{"modules/SegmentModule.html":{},"injectables/WindowWrapper.html":{}}}],["name",{"_index":48,"title":{},"body":{"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["new",{"_index":71,"title":{},"body":{"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"injectables/WindowWrapper.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["new(player",{"_index":113,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["ngmodule",{"_index":56,"title":{},"body":{"modules/SegmentModule.html":{},"injectables/WindowWrapper.html":{},"index.html":{}}}],["ngoninit",{"_index":372,"title":{},"body":{"index.html":{}}}],["ngx",{"_index":64,"title":{},"body":{"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"injectables/WindowWrapper.html":{},"index.html":{}}}],["noninfringement",{"_index":449,"title":{},"body":{"license.html":{}}}],["notice",{"_index":433,"title":{},"body":{"license.html":{}}}],["npm",{"_index":345,"title":{},"body":{"index.html":{}}}],["npmjs",{"_index":394,"title":{},"body":{"index.html":{}}}],["null",{"_index":99,"title":{},"body":{"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"injectables/WindowWrapper.html":{}}}],["number",{"_index":311,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["object",{"_index":382,"title":{},"body":{"index.html":{}}}],["obtaining",{"_index":410,"title":{},"body":{"license.html":{}}}],["official",{"_index":339,"title":{},"body":{"index.html":{}}}],["on(method",{"_index":283,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["on/off",{"_index":265,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["oninit",{"_index":362,"title":{},"body":{"index.html":{}}}],["opendecide",{"_index":399,"title":{},"body":{"index.html":{},"license.html":{}}}],["optional",{"_index":13,"title":{},"body":{"interfaces/SegmentConfig.html":{},"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"injectables/WindowWrapper.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":139,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["organization",{"_index":210,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["others",{"_index":115,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["otherwise",{"_index":460,"title":{},"body":{"license.html":{}}}],["out",{"_index":462,"title":{},"body":{"license.html":{},"overview.html":{}}}],["overview",{"_index":467,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["page",{"_index":194,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["page(category",{"_index":204,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["page(name",{"_index":202,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["param",{"_index":95,"title":{},"body":{"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"injectables/WindowWrapper.html":{}}}],["parameters",{"_index":47,"title":{},"body":{"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["parentmodule",{"_index":98,"title":{},"body":{"modules/SegmentModule.html":{},"injectables/WindowWrapper.html":{}}}],["particular",{"_index":447,"title":{},"body":{"license.html":{}}}],["party",{"_index":220,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["pass",{"_index":295,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["passed",{"_index":293,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["perform",{"_index":188,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["permission",{"_index":404,"title":{},"body":{"license.html":{}}}],["permit",{"_index":426,"title":{},"body":{"license.html":{}}}],["person",{"_index":409,"title":{},"body":{"license.html":{}}}],["persons",{"_index":427,"title":{},"body":{"license.html":{}}}],["platform_id",{"_index":57,"title":{},"body":{"modules/SegmentModule.html":{},"injectables/WindowWrapper.html":{}}}],["platformid",{"_index":334,"title":{},"body":{"miscellaneous/functions.html":{}}}],["platoon",{"_index":215,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["pluginname",{"_index":314,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["plugins",{"_index":112,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["portions",{"_index":437,"title":{},"body":{"license.html":{}}}],["previous",{"_index":238,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["previousid",{"_index":237,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["previously",{"_index":233,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["private",{"_index":122,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["project",{"_index":211,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["promise",{"_index":180,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["promise((resolve",{"_index":181,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["promises",{"_index":379,"title":{},"body":{"index.html":{}}}],["properties",{"_index":12,"title":{},"body":{"interfaces/SegmentConfig.html":{},"interfaces/SegmentPlugin.html":{},"injectables/WindowWrapper.html":{},"index.html":{}}}],["provide",{"_index":91,"title":{},"body":{"modules/SegmentModule.html":{},"injectables/WindowWrapper.html":{}}}],["provided",{"_index":438,"title":{},"body":{"license.html":{}}}],["provider",{"_index":83,"title":{},"body":{"modules/SegmentModule.html":{},"injectables/WindowWrapper.html":{},"miscellaneous/functions.html":{}}}],["providers",{"_index":90,"title":{},"body":{"modules/SegmentModule.html":{},"injectables/WindowWrapper.html":{},"index.html":{},"overview.html":{}}}],["provides",{"_index":337,"title":{},"body":{"index.html":{}}}],["proxied",{"_index":31,"title":{},"body":{"interfaces/SegmentConfig.html":{}}}],["public",{"_index":81,"title":{},"body":{"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"injectables/WindowWrapper.html":{},"index.html":{}}}],["publish",{"_index":393,"title":{},"body":{"index.html":{},"license.html":{}}}],["purpose",{"_index":448,"title":{},"body":{"license.html":{}}}],["ready",{"_index":245,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["recognizable",{"_index":170,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["recognized",{"_index":239,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["record",{"_index":187,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["registry",{"_index":395,"title":{},"body":{"index.html":{}}}],["requests",{"_index":30,"title":{},"body":{"interfaces/SegmentConfig.html":{}}}],["reset",{"_index":259,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{},"overview.html":{}}}],["resolve(this",{"_index":184,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["restriction",{"_index":416,"title":{},"body":{"license.html":{}}}],["result",{"_index":33,"title":{},"body":{"interfaces/SegmentConfig.html":{},"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"injectables/WindowWrapper.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":35,"title":{},"body":{"interfaces/SegmentConfig.html":{},"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"injectables/WindowWrapper.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":87,"title":{},"body":{"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"injectables/WindowWrapper.html":{}}}],["returns",{"_index":51,"title":{},"body":{"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"injectables/WindowWrapper.html":{},"index.html":{}}}],["rights",{"_index":418,"title":{},"body":{"license.html":{}}}],["run",{"_index":276,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["same",{"_index":224,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["save",{"_index":346,"title":{},"body":{"index.html":{}}}],["script",{"_index":141,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["script.async",{"_index":145,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["script.src",{"_index":146,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["script.type",{"_index":143,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["segment",{"_index":7,"title":{},"body":{"interfaces/SegmentConfig.html":{},"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"injectables/WindowWrapper.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["segment.io",{"_index":23,"title":{},"body":{"interfaces/SegmentConfig.html":{}}}],["segment_config",{"_index":70,"title":{},"body":{"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"injectables/WindowWrapper.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["segmentconfig",{"_index":1,"title":{"interfaces/SegmentConfig.html":{}},"body":{"interfaces/SegmentConfig.html":{},"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"injectables/WindowWrapper.html":{},"coverage.html":{}}}],["segmenthost",{"_index":17,"title":{},"body":{"interfaces/SegmentConfig.html":{},"interfaces/SegmentPlugin.html":{}}}],["segmentmodule",{"_index":37,"title":{"modules/SegmentModule.html":{}},"body":{"modules/SegmentModule.html":{},"injectables/WindowWrapper.html":{},"index.html":{},"modules.html":{}}}],["segmentmodule.forroot",{"_index":355,"title":{},"body":{"index.html":{}}}],["segmentplugin",{"_index":106,"title":{"interfaces/SegmentPlugin.html":{}},"body":{"interfaces/SegmentPlugin.html":{},"coverage.html":{},"index.html":{}}}],["segmentservice",{"_index":63,"title":{},"body":{"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"injectables/WindowWrapper.html":{},"coverage.html":{},"index.html":{}}}],["selector",{"_index":363,"title":{},"body":{"index.html":{}}}],["sell",{"_index":424,"title":{},"body":{"license.html":{}}}],["sended",{"_index":375,"title":{},"body":{"index.html":{}}}],["service",{"_index":360,"title":{},"body":{"index.html":{}}}],["set",{"_index":273,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["shall",{"_index":434,"title":{},"body":{"license.html":{}}}],["skipself",{"_index":58,"title":{},"body":{"modules/SegmentModule.html":{},"injectables/WindowWrapper.html":{}}}],["society",{"_index":221,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["software",{"_index":412,"title":{},"body":{"license.html":{}}}],["soon",{"_index":249,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/SegmentConfig.html":{},"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"injectables/WindowWrapper.html":{}}}],["src/.../ngx",{"_index":333,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/ngx",{"_index":6,"title":{},"body":{"interfaces/SegmentConfig.html":{},"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"injectables/WindowWrapper.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["started",{"_index":336,"title":{"index.html":{},"license.html":{}},"body":{}}],["statements",{"_index":320,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":41,"title":{},"body":{"modules/SegmentModule.html":{},"injectables/WindowWrapper.html":{}}}],["status",{"_index":26,"title":{},"body":{"interfaces/SegmentConfig.html":{}}}],["string",{"_index":18,"title":{},"body":{"interfaces/SegmentConfig.html":{},"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["styleurls",{"_index":367,"title":{},"body":{"index.html":{}}}],["subject",{"_index":429,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":422,"title":{},"body":{"license.html":{}}}],["submission",{"_index":301,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["substantial",{"_index":436,"title":{},"body":{"license.html":{}}}],["table",{"_index":331,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":330,"title":{},"body":{"coverage.html":{}}}],["taking",{"_index":381,"title":{},"body":{"index.html":{}}}],["team",{"_index":213,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["templateurl",{"_index":365,"title":{},"body":{"index.html":{}}}],["text/javascript",{"_index":144,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this._config.debug",{"_index":161,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this._config.loadoninitialization",{"_index":126,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this._config.segmenthost",{"_index":136,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this._doc.createelement('script",{"_index":142,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this._doc.getelementsbytagname('script')[0",{"_index":151,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this._w.analytics",{"_index":132,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this._w.analytics._loadoptions",{"_index":153,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this._w.analytics.alias(userid",{"_index":244,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this._w.analytics.debug(enabled",{"_index":272,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this._w.analytics.factory(method",{"_index":135,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this._w.analytics.group(groupid",{"_index":229,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this._w.analytics.id",{"_index":257,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this._w.analytics.identify(userid",{"_index":182,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this._w.analytics.load",{"_index":138,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this._w.analytics.load(apikey",{"_index":160,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this._w.analytics.methods.foreach((method",{"_index":133,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this._w.analytics.on(method",{"_index":284,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this._w.analytics.page(category",{"_index":205,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this._w.analytics.plugins",{"_index":315,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this._w.analytics.push(args",{"_index":131,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this._w.analytics.ready(_",{"_index":253,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this._w.analytics.reset",{"_index":263,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this._w.analytics.snippet_version",{"_index":154,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this._w.analytics.timeout(timeout",{"_index":313,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this._w.analytics.track(event",{"_index":193,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this._w.analytics.trackform(forms",{"_index":304,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this._w.analytics.tracklink(elements",{"_index":298,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this._w.analytics.traits",{"_index":258,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this._w.analytics.user",{"_index":255,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this._w.analytics[method",{"_index":134,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this.debug(this._config.debug",{"_index":164,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this.load(this._config.apikey",{"_index":156,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this.segment.track('load",{"_index":373,"title":{},"body":{"index.html":{}}}],["throw",{"_index":101,"title":{},"body":{"modules/SegmentModule.html":{},"injectables/WindowWrapper.html":{}}}],["timeout",{"_index":310,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["timeout(timeout",{"_index":312,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["token",{"_index":68,"title":{},"body":{"modules/SegmentModule.html":{},"injectables/WindowWrapper.html":{},"miscellaneous/variables.html":{}}}],["tort",{"_index":459,"title":{},"body":{"license.html":{}}}],["track",{"_index":185,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["track(event",{"_index":192,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["trackform(forms",{"_index":303,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["tracking",{"_index":191,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["tracklink(elements",{"_index":296,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["traits",{"_index":172,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["tribe",{"_index":214,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["troop",{"_index":218,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["true",{"_index":127,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["ts",{"_index":385,"title":{},"body":{"index.html":{}}}],["turn",{"_index":264,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["two",{"_index":232,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["type",{"_index":19,"title":{},"body":{"interfaces/SegmentConfig.html":{},"modules/SegmentModule.html":{},"injectables/WindowWrapper.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["typeof",{"_index":125,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["unassociated",{"_index":234,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["universal",{"_index":342,"title":{},"body":{"index.html":{}}}],["up",{"_index":223,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["use",{"_index":358,"title":{},"body":{"index.html":{},"license.html":{}}}],["used",{"_index":294,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["usefactory",{"_index":92,"title":{},"body":{"modules/SegmentModule.html":{},"injectables/WindowWrapper.html":{}}}],["user",{"_index":175,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["userid",{"_index":171,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["users",{"_index":168,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["user’s",{"_index":242,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["usevalue",{"_index":96,"title":{},"body":{"modules/SegmentModule.html":{},"injectables/WindowWrapper.html":{}}}],["using",{"_index":338,"title":{},"body":{"index.html":{}}}],["value",{"_index":476,"title":{},"body":{"miscellaneous/variables.html":{}}}],["variable",{"_index":325,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":474,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["video",{"_index":111,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["viewed",{"_index":201,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["views",{"_index":195,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["void",{"_index":159,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["void;development",{"_index":383,"title":{},"body":{"index.html":{}}}],["want",{"_index":236,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["warranties",{"_index":444,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":439,"title":{},"body":{"license.html":{}}}],["website",{"_index":196,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["whether",{"_index":456,"title":{},"body":{"license.html":{}}}],["window",{"_index":73,"title":{},"body":{"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"injectables/WindowWrapper.html":{},"miscellaneous/functions.html":{}}}],["windowwrapper",{"_index":78,"title":{"injectables/WindowWrapper.html":{}},"body":{"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"injectables/WindowWrapper.html":{},"coverage.html":{}}}],["without",{"_index":415,"title":{},"body":{"license.html":{}}}],["workspace",{"_index":212,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["wrapper",{"_index":74,"title":{},"body":{"modules/SegmentModule.html":{},"injectables/WindowWrapper.html":{}}}],["write",{"_index":157,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["yes",{"_index":50,"title":{},"body":{"modules/SegmentModule.html":{}}}],["your_write_apikey",{"_index":356,"title":{},"body":{"index.html":{}}}],["you’re",{"_index":190,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["zoom",{"_index":471,"title":{},"body":{"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/SegmentConfig.html":{"url":"interfaces/SegmentConfig.html","title":"interface - SegmentConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SegmentConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/ngx-segment-analytics.config.ts\n        \n\n            \n                Description\n            \n            \n                Segment Configuration Interface\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        apiKey\n                                \n                                \n                                            Optional\n                                        debug\n                                \n                                \n                                            Optional\n                                        loadOnInitialization\n                                \n                                \n                                            Optional\n                                        segmentHost\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        apiKey\n                                    \n                                \n                                \n                                    \n                                        apiKey:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    API Key for Segment.io \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        debug\n                                    \n                                \n                                \n                                    \n                                        debug:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Debug mode status \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loadOnInitialization\n                                    \n                                \n                                \n                                    \n                                        loadOnInitialization:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Load Segment configuration on initialization \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        segmentHost\n                                    \n                                \n                                \n                                    \n                                        segmentHost:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Segment Host if requests are proxied *\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface SegmentConfig {\n    /** API Key for Segment.io */\n    apiKey?: string;\n    /** Debug mode status */\n    debug?: boolean;\n    /** Load Segment configuration on initialization */\n    loadOnInitialization?: boolean;\n    /** Segment Host if requests are proxied **/\n    segmentHost?: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SegmentModule.html":{"url":"modules/SegmentModule.html","title":"module - SegmentModule","body":"\n                   \n\n\n\n\n    Modules\n    SegmentModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/ngx-segment-analytics.module.ts\n        \n\n\n        \n            Description\n        \n        \n            Segment Module\n\n        \n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRoot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(config?: SegmentConfig)\n                \n            \n\n\n            \n                \n                    Defined in src/ngx-segment-analytics.module.ts:43\n                \n            \n\n\n            \n                \n                    Segment Module Initialisation\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                SegmentConfig\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Segment Configuration\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ModuleWithProviders\n\n                    \n                    \n                        Segment Module\n\n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import {Injectable, InjectionToken, ModuleWithProviders, NgModule, Optional, PLATFORM_ID, SkipSelf} from '@angular/core';\nimport {CommonModule, isPlatformBrowser} from '@angular/common';\nimport {SegmentService} from './ngx-segment-analytics.service';\nimport {SegmentConfig} from './ngx-segment-analytics.config';\n\n/** Segment Configuration Injection Token */\nexport const SEGMENT_CONFIG: InjectionToken = new InjectionToken('ngx-segment-analytics.config');\n\n/**\n * Window Wrapper for Angular AOT\n */\n@Injectable()\nexport class WindowWrapper {\n    /** Segment Analytics.js instance */\n    public analytics: any;\n}\n\n/**\n * Window Provider for Angular AOT\n * @returns Browser Window instance\n */\nexport function getWindow(platformId: any) {\n    return isPlatformBrowser(platformId) ? window : {};\n}\n\n/**\n * Segment Module\n */\n@NgModule({\n    imports: [CommonModule],\n    providers: [\n        {provide: WindowWrapper, useFactory: getWindow, deps: [PLATFORM_ID]}\n    ]\n})\nexport class SegmentModule {\n\n    /**\n     * Segment Module Initialisation\n     *\n     * @param config Segment Configuration\n     * @returns Segment Module\n     */\n    public static forRoot(config?: SegmentConfig): ModuleWithProviders {\n        return {\n            ngModule: SegmentModule,\n            providers: [\n                {provide: SEGMENT_CONFIG, useValue: config},\n                SegmentService,\n            ],\n        };\n    }\n\n    /**\n     * Segment Module Constructor\n     *\n     * @param parentModule Must be null\n     */\n    constructor(@Optional() @SkipSelf() parentModule: SegmentModule) {\n        if (parentModule) {\n            throw new Error('SegmentModule is already loaded. Import it in the AppModule only');\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SegmentPlugin.html":{"url":"interfaces/SegmentPlugin.html","title":"interface - SegmentPlugin","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SegmentPlugin\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/ngx-segment-analytics.service.ts\n        \n\n\n\n\n\n\n    \n\n\n    \n        import {Inject, Injectable} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\nimport {SEGMENT_CONFIG, WindowWrapper} from './ngx-segment-analytics.module';\nimport {SegmentConfig} from './ngx-segment-analytics.config';\n\nexport interface SegmentPlugin {\n    // Video Plugins\n    new(player: any, accessToken: string): any;\n\n    // Others plugins\n    new(): any;\n}\n\n/** @dynamic */\n@Injectable()\nexport class SegmentService {\n\n    /**\n     * @param _w Browser window\n     * @param _doc Browser DOM\n     * @param _config Segment configuration\n     */\n    constructor(\n        @Inject(WindowWrapper) private _w: WindowWrapper,\n        @Inject(DOCUMENT) private _doc: Document,\n        @Inject(SEGMENT_CONFIG) private _config: SegmentConfig\n    ) {\n        if (typeof this._config.loadOnInitialization !== 'boolean') {\n            this._config.loadOnInitialization = true; // Compatibility  {\n                return (...args) => {\n                    args.unshift(method);\n                    this._w.analytics.push(args);\n                    return this._w.analytics;\n                };\n            };\n\n            this._w.analytics.methods.forEach((method: string) => {\n                this._w.analytics[method] = this._w.analytics.factory(method);\n            });\n\n            const segmentHost: string = typeof this._config.segmentHost === 'string' ? this._config.segmentHost : 'cdn.segment.com';\n\n            this._w.analytics.load = (key: string, options: { integrations: { [key: string]: boolean } }) => {\n                const script = this._doc.createElement('script');\n                script.type = 'text/javascript';\n                script.async = true;\n                script.src = 'https://' + segmentHost + '/analytics.js/v1/' + key + '/analytics.min.js';\n\n                const first = this._doc.getElementsByTagName('script')[0];\n                first.parentNode.insertBefore(script, first);\n                this._w.analytics._loadOptions = options;\n            };\n\n            this._w.analytics.SNIPPET_VERSION = '4.1.0';\n            if (this._config.loadOnInitialization) {\n                this.load(this._config.apiKey);\n            }\n        }\n    }\n\n    /**\n     * Load Segment configuration.\n     *\n     * @param apiKey Write API Key\n     * @param options Optional parameters\n     */\n    public load(apiKey: string, options?: any): void {\n        this._w.analytics.load(apiKey, options);\n        if (this._config.debug) {\n            console.log('Segment initialized');\n        }\n        this.debug(this._config.debug);\n    }\n\n    /**\n     * The identify method is how you associate your users and their actions to a recognizable userId and traits.\n     *\n     * @param userId The database ID for the user.\n     * @param traits A dictionary of traits you know about the user, like their email or name\n     * @param options A dictionary of options.\n     *\n     * @returns\n     */\n    public identify(userId?: string, traits?: any, options?: any): Promise {\n        return new Promise((resolve) => {\n            this._w.analytics.identify(userId, traits, options, _ => resolve(this));\n        });\n    }\n\n    /**\n     * The track method lets you record any actions your users perform.\n     *\n     * @param event The name of the event you’re tracking.\n     * @param properties A dictionary of properties for the event.\n     * @param options A dictionary of options.\n     *\n     * @returns\n     */\n    public track(event: string, properties?: any, options?: any): Promise {\n        return new Promise((resolve) => {\n            this._w.analytics.track(event, properties, options, _ => resolve(this));\n        });\n    }\n\n    /**\n     * The page method lets you record page views on your website, along with optional extra information about the page being viewed.\n     *\n     * @param name The name of the page.\n     * @param properties A dictionary of properties of the page.\n     * @param options A dictionary of options.\n     *\n     * @returns\n     */\n    public page(name?: string, properties?: any, options?: any): Promise;\n\n    /**\n     * The page method lets you record page views on your website, along with optional extra information about the page being viewed.\n     *\n     * @param category The category of the page.\n     * @param name The name of the page.\n     * @param properties A dictionary of properties of the page.\n     * @param options A dictionary of options.\n     *\n     * @returns\n     */\n    public page(category: string, name: string, properties?: any, options?: any): Promise;\n\n    /**\n     * The page method lets you record page views on your website, along with optional extra information about the page being viewed.\n     *\n     * @param category The category of the page.\n     * @param name The name of the page.\n     * @param properties A dictionary of properties of the page.\n     * @param options A dictionary of options.\n     *\n     * @returns\n     */\n    public page(category?: string, name?: string, properties?: any, options?: any): Promise {\n        return new Promise((resolve) => {\n            this._w.analytics.page(category, name, properties, options, _ => resolve(this));\n        });\n    }\n\n    /**\n     * The group method associates an identified user with a company, organization, project, workspace, team, tribe, platoon,\n     * assemblage, cluster, troop, gang, party, society or any other name you came up with for the same concept.\n     *\n     * @param groupId The Group ID to associate with the current user.\n     * @param traits A dictionary of traits for the group.\n     *\n     * @returns\n     */\n    public group(groupId: string, traits?: any): Promise {\n        return new Promise((resolve) => {\n            this._w.analytics.group(groupId, traits, _ => resolve(this));\n        });\n    }\n\n    /**\n     * The alias method combines two previously unassociated user identities.\n     *\n     * @param userId The new user ID you want to associate with the user.\n     * @param previousId The previous ID that the user was recognized by. This defaults to the currently identified user’s ID.\n     * @param options A dictionary of options.\n     *\n     * @returns\n     */\n    public alias(userId: string, previousId?: string, options?: any): Promise {\n        return new Promise((resolve) => {\n            this._w.analytics.alias(userId, previousId, options, _ => resolve(this));\n        });\n    }\n\n    /**\n     * The ready method allows you execute a promise that will be called as soon as all of your enabled destinations have loaded\n     * and analytics.js has completed initialization.\n     *\n     * @returns\n     */\n    public ready(): Promise {\n        return new Promise((resolve) => {\n            this._w.analytics.ready(_ => resolve(this));\n        });\n    }\n\n    /**\n     * Return informations about the currently identified user\n     *\n     * @returns Informations about the currently identified user\n     */\n    public user(): any {\n        return this._w.analytics.user();\n    }\n\n    /**\n     * Return identifier about the currently identified user\n     *\n     * @returns Identifier about the currently identified user\n     */\n    public id(): string | null {\n        return this._w.analytics.id();\n    }\n\n    /**\n     * Return traits about the currently identified user\n     *\n     * @returns Traits about the currently identified user\n     */\n    public traits(): any {\n        return this._w.analytics.traits();\n    }\n\n    /**\n     * Reset the id, including anonymousId, and clear traits for the currently identified user and group.\n     */\n    public reset(): void {\n        this._w.analytics.reset();\n    }\n\n    /**\n     * Turn on/off debug mode, logging helpful messages to the console.\n     *\n     * @param enabled Enable or not the debug mode\n     */\n    public debug(enabled?: boolean): void {\n        this._w.analytics.debug(enabled);\n    }\n\n    /**\n     * Set listeners for these events and run your own custom code.\n     *\n     * @param method Name of the method to listen for\n     * @param callback A function to execute after each the emitted method\n     */\n    public on(method: string, callback: (event?: string, properties?: any, options?: any) => any): void {\n        this._w.analytics.on(method, callback);\n    }\n\n    /**\n     * Attaches the `track` call as a handler to a link\n     *\n     * @param elements DOM element or an array of DOM elements to be bound with track method.\n     * @param event The name of the event, passed to the `track` method or a function that returns a string to be used\n     *              as the name of the track event.\n     * @param properties A dictionary of properties to pass with the `track` method.\n     */\n    public trackLink(elements: HTMLElement | HTMLElement[], event: string | Function, properties?: any | Function): void {\n        this._w.analytics.trackLink(elements, event, properties);\n    }\n\n    /**\n     * Binds a `track` call to a form submission.\n     *\n     * @param forms The form element to track or an array of form\n     * @param event The name of the event, passed to the `track` method.\n     * @param properties A dictionary of properties to pass with the `track` method.\n     */\n    public trackForm(forms: HTMLElement | HTMLElement[], event: string | Function, properties?: any | Function): void {\n        this._w.analytics.trackForm(forms, event, properties);\n    }\n\n    /**\n     * Set the length (in milliseconds) of the callbacks and helper functions\n     *\n     * @param timeout Number of milliseconds\n     */\n    public timeout(timeout: number): void {\n        this._w.analytics.timeout(timeout);\n    }\n\n    public get plugins(): { [pluginName: string]: SegmentPlugin } {\n        return this._w.analytics.plugins;\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WindowWrapper.html":{"url":"injectables/WindowWrapper.html","title":"injectable - WindowWrapper","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  WindowWrapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/ngx-segment-analytics.module.ts\n        \n\n            \n                Description\n            \n            \n                Window Wrapper for Angular AOT\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                analytics\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            analytics\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/ngx-segment-analytics.module.ts:15\n                            \n                        \n\n                \n                    \n                        Segment Analytics.js instance \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable, InjectionToken, ModuleWithProviders, NgModule, Optional, PLATFORM_ID, SkipSelf} from '@angular/core';\nimport {CommonModule, isPlatformBrowser} from '@angular/common';\nimport {SegmentService} from './ngx-segment-analytics.service';\nimport {SegmentConfig} from './ngx-segment-analytics.config';\n\n/** Segment Configuration Injection Token */\nexport const SEGMENT_CONFIG: InjectionToken = new InjectionToken('ngx-segment-analytics.config');\n\n/**\n * Window Wrapper for Angular AOT\n */\n@Injectable()\nexport class WindowWrapper {\n    /** Segment Analytics.js instance */\n    public analytics: any;\n}\n\n/**\n * Window Provider for Angular AOT\n * @returns Browser Window instance\n */\nexport function getWindow(platformId: any) {\n    return isPlatformBrowser(platformId) ? window : {};\n}\n\n/**\n * Segment Module\n */\n@NgModule({\n    imports: [CommonModule],\n    providers: [\n        {provide: WindowWrapper, useFactory: getWindow, deps: [PLATFORM_ID]}\n    ]\n})\nexport class SegmentModule {\n\n    /**\n     * Segment Module Initialisation\n     *\n     * @param config Segment Configuration\n     * @returns Segment Module\n     */\n    public static forRoot(config?: SegmentConfig): ModuleWithProviders {\n        return {\n            ngModule: SegmentModule,\n            providers: [\n                {provide: SEGMENT_CONFIG, useValue: config},\n                SegmentService,\n            ],\n        };\n    }\n\n    /**\n     * Segment Module Constructor\n     *\n     * @param parentModule Must be null\n     */\n    constructor(@Optional() @SkipSelf() parentModule: SegmentModule) {\n        if (parentModule) {\n            throw new Error('SegmentModule is already loaded. Import it in the AppModule only');\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/ngx-segment-analytics.config.ts\n            \n            interface\n            SegmentConfig\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/ngx-segment-analytics.module.ts\n            \n            injectable\n            WindowWrapper\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/ngx-segment-analytics.module.ts\n            \n            function\n            getWindow\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/ngx-segment-analytics.module.ts\n            \n            variable\n            SEGMENT_CONFIG\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/ngx-segment-analytics.service.ts\n            \n            injectable\n            SegmentService\n            \n                90 %\n                (18/20)\n            \n        \n        \n            \n                \n                src/ngx-segment-analytics.service.ts\n            \n            interface\n            SegmentPlugin\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            getWindow   (src/.../ngx-segment-analytics.module.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/ngx-segment-analytics.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            getWindow\n                        \n                        \n                    \n                \n            \n            \n                \ngetWindow(platformId: any)\n                \n            \n\n\n\n\n            \n                \n                    Window Provider for Angular AOT\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    platformId\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nngx-segment-analytics\n\n\n\n\n\n\n\nThis Angular module provides an API for Segment using the analytics.js official library.\nCompatible with Angular AOT and Universal.\nInstallation\nTo install this library, run:\n$ npm install --save ngx-segment-analyticsConsuming Segment\nAdd the SegmentModule to your Angular AppModule:\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\n\n// Import the Segment module\nimport { SegmentModule } from 'ngx-segment-analytics';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    // Segment Importation\n    SegmentModule.forRoot({ apiKey: 'YOUR_WRITE_APIKEY', debug: true, loadOnInitialization: true })\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }You can use the SegmentService in any constructor as a injected service :\nimport { Component, OnInit } from '@angular/core';\nimport { SegmentService } from 'ngx-segment-analytics';\n@Component({\n    selector: 'hero',\n    templateUrl: './hero.component.html',\n    styleUrls: ['./hero.component.css']\n})\nexport class HeroComponent implements OnInit {\n\n    constructor(private segment: SegmentService) { }\n\n    public ngOnInit() {\n        this.segment.track('load an hero')\n            .then(() => console.log(\"Event sended\"));\n    }\n\n}Documentation\nA full documentation is available here\nAPI\nThis API is compatible with analytics.js but returns Promises instead of taking callbacks in parameters.\nload(apiKey: string, options: any);\nget plugins: {[pluginName :string]: SegmentPlugin};\nidentify(userId?: string, traits?: any, options?: any): Promise;\ntrack(event: string, properties?: any, options?: any): Promise;\npage(category?: string, name?: string, properties?: any, options?: any): Promise;\ngroup(groupId: string, traits?: any): Promise;\nalias(userId: string, previousId?: string, options?: any): Promise;\nready(): Promise;\nuser(): any;\nid(): any;\ntraits(): any;\nreset(): void;\ndebug(enabled?: boolean): void;\non(method: string, callback: (event?: string, properties?: any, options?: any) => any): void;\ntrackLink(elements: HTMLElement | HTMLElement[], event: string | Function, properties?: Object | Function): void;\ntrackForm(forms: HTMLElement | HTMLElement[], event: string | Function, properties?: Object | Function): void;\ntimeout(timeout: number): void;Development\nTo lint all *.ts files:\n$ npm run lintTo generate all *.js, *.d.ts and *.metadata.json files:\n$ npm run buildTo publish on npmjs registry :\n$ npm publish distLicense\nMIT ©2019 OpenDecide\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nThe MIT License (MIT)\nCopyright (c) 2017 OpenDecide\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        SegmentModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            SEGMENT_CONFIG   (src/.../ngx-segment-analytics.module.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/ngx-segment-analytics.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            SEGMENT_CONFIG\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         InjectionToken\n\n                        \n                    \n                    \n                        \n                            Default value : new InjectionToken('ngx-segment-analytics.config')\n                        \n                    \n\n                \n                    \n                        Segment Configuration Injection Token \n\n                    \n                \n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
