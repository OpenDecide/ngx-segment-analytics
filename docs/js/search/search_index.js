var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/interfaces/SegmentConfig.html",[0,0.833,1,0.654]],["body/interfaces/SegmentConfig.html",[0,1.247,1,0.98,2,1.273,3,1.014,4,1.014,5,0.806,6,0.634,7,0.688,8,1.273,9,1.273,10,1.76,11,0.806,12,1.379,13,1.939,14,2.114,15,1.858,16,2.211,17,3.568,18,3.568,19,2.409,20,1.1,21,0.09,22,1.733,23,2.206,24,2.924,25,2.281,26,2.206,27,2.924,28,2.206,29,2.206,30,2.924,31,2.924,32,2.924,33,2.206,34,2.924,35,0.806,36,2.206,37,0.806,38,1.247,39,1.621,40,1.621,41,2.206,42,0.806,43,0.806,44,1.621,45,1.014,46,1.014,47,1.273,48,1.014,49,1.621,50,0.044,51,0.06,52,0.044]],["title/modules/SegmentModule.html",[53,1.047,54,1.047]],["body/modules/SegmentModule.html",[1,1.035,3,0.974,4,0.974,5,0.775,6,0.839,7,0.694,9,1.686,10,1.342,13,1.342,20,0.609,21,0.091,35,1.427,37,0.775,38,1.068,42,1.068,43,0.775,45,0.974,50,0.042,51,0.058,52,0.042,53,1.839,54,1.655,55,1.224,56,1.224,57,2.065,58,2.846,59,2.065,60,2.846,61,1.558,62,2.065,63,2.846,64,0.974,65,0.974,66,3.256,67,2.065,68,1.929,69,3.256,70,2.456,71,2.846,72,2.846,73,2.846,74,2.065,75,1.558,76,1.342,77,1.686,78,2.065,79,1.068,80,1.655,81,1.224,82,1.558,83,0.974,84,0.974,85,1.224,86,1.558,87,0.974,88,1.558,89,2.147,90,2.065,91,1.558,92,1.686,93,2.846,94,2.065,95,1.224,96,2.065,97,0.974,98,2.147,99,0.974,100,2.065,101,1.224,102,3.256,103,1.558,104,2.065,105,2.065,106,2.065,107,2.065,108,1.558,109,1.558]],["title/interfaces/SegmentPlugin.html",[0,0.833,110,1.047]],["body/interfaces/SegmentPlugin.html",[0,0.268,1,0.482,2,0.424,3,0.337,4,0.337,5,0.268,6,0.211,7,0.365,10,0.584,12,1.748,13,0.919,14,0.424,15,0.771,19,2.213,21,0.092,22,0.733,23,1.66,25,0.733,26,0.933,28,0.54,29,1.233,33,0.54,35,0.731,37,0.268,38,0.464,41,0.933,42,0.268,43,1.025,45,0.337,46,0.584,47,0.424,48,0.771,50,0.015,51,0.025,52,0.015,64,0.337,65,1.614,68,1.87,75,0.54,76,0.337,77,0.424,79,0.464,80,0.584,81,0.424,85,0.733,87,1.136,89,2.62,97,0.337,98,3.012,99,1.681,101,0.424,103,0.54,108,0.933,110,0.771,111,0.54,112,0.715,113,0.584,114,0.715,115,0.715,116,1.233,117,0.715,118,0.715,119,0.715,120,0.715,121,0.715,122,1.635,123,0.715,124,0.715,125,1.237,126,1.237,127,1.635,128,1.635,129,0.715,130,0.715,131,0.715,132,0.715,133,1.237,134,1.948,135,1.237,136,1.948,137,0.715,138,0.715,139,1.948,140,1.237,141,1.237,142,0.715,143,0.715,144,0.54,145,0.715,146,1.237,147,1.237,148,0.715,149,0.715,150,0.715,151,0.715,152,0.715,153,0.715,154,1.237,155,0.969,156,2.2,157,3.069,158,1.233,159,1.237,160,3.52,161,0.715,162,0.715,163,3.473,164,0.715,165,0.715,166,0.715,167,0.715,168,0.715,169,0.715,170,0.715,171,2.893,172,0.715,173,0.715,174,0.715,175,0.715,176,0.715,177,0.715,178,0.715,179,0.715,180,0.715,181,0.715,182,1.237,183,0.715,184,0.715,185,0.715,186,0.715,187,0.715,188,0.715,189,0.715,190,0.54,191,1.949,192,0.715,193,0.715,194,0.715,195,1.635,196,1.237,197,1.237,198,0.715,199,1.635,200,2.439,201,0.715,202,1.949,203,2.581,204,3.302,205,0.715,206,0.715,207,0.54,208,2.158,209,2.409,210,0.715,211,2.2,212,2.409,213,1.948,214,1.948,215,0.715,216,1.916,217,0.715,218,0.715,219,0.54,220,0.715,221,1.635,222,1.635,223,1.635,224,1.635,225,1.635,226,1.635,227,1.635,228,0.715,229,1.948,230,0.933,231,0.715,232,0.715,233,2.86,234,0.715,235,0.715,236,0.715,237,0.715,238,0.715,239,0.715,240,0.715,241,0.715,242,0.715,243,0.715,244,0.715,245,0.715,246,0.715,247,0.715,248,0.715,249,0.715,250,0.715,251,0.715,252,0.715,253,0.54,254,0.715,255,0.715,256,0.715,257,0.715,258,0.715,259,0.715,260,0.715,261,1.233,262,0.715,263,0.715,264,0.715,265,2.732,266,0.715,267,0.54,268,0.715,269,0.715,270,1.237,271,0.715,272,0.715,273,1.237,274,0.715,275,0.424,276,0.715,277,0.715,278,1.237,279,0.715,280,0.933,281,0.715,282,0.715,283,0.54,284,0.715,285,0.715,286,0.715,287,0.715,288,0.715,289,0.715,290,0.715,291,0.715,292,0.715,293,0.715,294,0.54,295,0.715,296,1.237,297,0.715,298,0.715,299,0.54,300,0.715,301,0.715,302,1.233,303,0.715,304,0.715,305,0.54,306,0.715,307,0.715,308,1.237,309,0.715,310,0.715,311,1.237,312,1.237,313,1.237,314,0.715,315,1.237,316,0.715,317,1.237,318,0.54,319,1.469,320,0.715,321,0.715,322,1.635,323,0.715,324,0.715,325,0.54,326,0.715,327,0.715,328,1.237,329,0.54,330,0.715,331,0.424,332,0.715,333,0.933,334,0.54,335,0.715,336,0.54,337,0.715]],["title/injectables/WindowWrapper.html",[79,0.833,113,1.047]],["body/injectables/WindowWrapper.html",[3,1.362,4,1.362,5,1.083,7,0.587,9,1.711,11,1.083,12,1.67,20,0.851,21,0.088,35,1.083,37,1.083,38,1.083,50,0.059,51,0.072,52,0.059,61,2.178,79,1.328,80,1.67,81,2.097,83,1.67,84,1.67,86,2.67,97,1.362,99,1.806,113,1.67,275,2.097,338,2.178,339,2.67,340,2.178,341,2.888,342,2.887]],["title/coverage.html",[343,2.254]],["body/coverage.html",[0,1.292,1,0.815,5,1.036,6,1.216,7,0.684,8,2.224,20,0.815,21,0.087,42,1.036,43,1.036,46,1.303,50,0.057,51,0.071,52,0.057,56,1.637,76,1.303,79,1.036,87,1.303,95,1.637,110,1.303,111,2.599,113,1.625,280,2.084,339,2.084,340,2.084,343,2.084,344,1.637,345,2.763,346,3.93,347,2.763,348,3.445,349,3.445,350,3.445,351,3.445,352,2.763,353,2.763,354,2.763,355,2.763,356,2.763]],["title/miscellaneous/functions.html",[331,1.575,357,0.884]],["body/miscellaneous/functions.html",[6,0.935,7,0.621,11,1.19,13,1.496,20,0.935,21,0.082,50,0.065,51,0.077,52,0.065,56,2.22,64,1.496,65,1.496,80,1.496,82,2.393,83,1.496,84,1.496,88,2.393,95,2.22,331,1.879,357,1.496,358,2.393,359,3.172]],["title/index.html",[11,0.703,360,1.413,361,1.413]],["body/index.html",[7,0.641,12,1.623,14,1.024,15,0.815,16,1.024,19,2.406,21,0.09,22,1.75,25,1.024,35,1.389,37,0.941,38,0.941,48,1.183,50,0.035,51,0.051,52,0.035,53,1.183,54,1.183,64,0.815,65,0.815,68,1.024,70,1.892,76,1.393,77,1.92,83,1.393,84,0.815,85,1.024,87,1.528,91,1.303,92,1.024,97,1.183,99,0.815,101,1.024,109,1.892,110,0.815,116,1.303,155,1.024,158,1.303,171,2.708,190,1.303,191,2.596,200,2.228,202,1.303,203,1.303,207,1.303,208,2.708,216,1.75,219,1.303,230,1.303,253,1.303,261,1.303,267,1.303,275,1.486,294,1.303,299,2.228,302,1.303,305,1.303,318,1.303,319,2.444,325,1.303,329,1.303,333,1.303,334,1.303,336,1.303,341,2.228,344,1.486,362,1.728,363,1.728,364,1.728,365,2.508,366,2.508,367,1.728,368,1.728,369,2.508,370,3.24,371,1.728,372,1.728,373,1.728,374,2.508,375,1.728,376,2.953,377,1.728,378,1.303,379,1.728,380,1.728,381,1.728,382,1.303,383,1.303,384,1.728,385,1.728,386,2.508,387,2.508,388,1.728,389,2.508,390,1.728,391,1.728,392,1.728,393,1.728,394,1.728,395,1.728,396,1.728,397,1.728,398,1.728,399,1.728,400,1.728,401,1.728,402,1.303,403,1.728,404,1.728,405,1.728,406,1.728,407,2.508,408,1.728,409,1.728,410,1.728,411,1.892,412,1.728,413,1.728,414,1.728,415,1.728,416,1.728,417,1.728,418,1.892,419,1.728,420,1.728,421,1.728,422,1.303,423,1.728,424,1.303]],["title/license.html",[360,1.413,361,1.413,425,1.413]],["body/license.html",[21,0.067,50,0.052,51,0.067,52,0.052,144,1.914,216,1.503,283,2.462,344,1.503,383,2.462,411,1.914,418,1.914,422,2.462,424,1.914,425,1.914,426,3.608,427,2.537,428,2.537,429,3.264,430,2.537,431,2.537,432,2.537,433,2.537,434,2.537,435,2.537,436,3.264,437,4.2,438,2.537,439,2.537,440,3.608,441,2.537,442,2.537,443,2.537,444,2.537,445,2.537,446,2.537,447,2.537,448,2.537,449,2.537,450,3.264,451,2.537,452,2.537,453,2.537,454,2.537,455,2.537,456,2.537,457,2.537,458,3.264,459,3.264,460,2.537,461,2.537,462,2.537,463,2.537,464,2.537,465,2.537,466,2.537,467,2.537,468,2.537,469,2.537,470,2.537,471,2.537,472,2.537,473,2.537,474,2.537,475,2.537,476,2.537,477,2.537,478,2.537,479,2.537,480,2.537,481,2.537,482,2.537,483,2.537,484,2.537,485,2.537,486,1.914,487,2.537,488,2.537]],["title/modules.html",[55,1.771]],["body/modules.html",[21,0.079,50,0.069,51,0.079,52,0.069,54,1.591,55,1.999,402,2.545,489,3.374,490,3.374]],["title/overview.html",[491,2.254]],["body/overview.html",[2,1.906,21,0.077,50,0.066,51,0.077,52,0.066,53,1.782,92,1.906,155,1.906,338,2.427,378,2.427,382,2.427,486,2.427,491,2.427,492,3.217,493,3.217,494,3.217,495,3.778,496,3.217,497,3.778]],["title/miscellaneous/variables.html",[357,0.884,498,2.005]],["body/miscellaneous/variables.html",[1,0.871,6,0.871,7,0.684,8,2.291,10,1.393,11,1.108,15,1.393,16,1.75,20,1.058,21,0.088,36,2.228,39,2.228,40,2.228,42,1.347,43,1.108,44,2.228,45,1.393,46,1.693,47,1.75,48,1.393,49,2.228,50,0.06,51,0.073,52,0.06,357,1.393,358,2.708,498,2.228,499,3.589,500,3.589]]],"invertedIndex":[["",{"_index":21,"title":{},"body":{"interfaces/SegmentConfig.html":{},"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"injectables/WindowWrapper.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":349,"title":{},"body":{"coverage.html":{}}}],["0/1",{"_index":350,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":496,"title":{},"body":{"overview.html":{}}}],["1/1",{"_index":351,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":346,"title":{},"body":{"coverage.html":{}}}],["18/21",{"_index":353,"title":{},"body":{"coverage.html":{}}}],["2",{"_index":497,"title":{},"body":{"overview.html":{}}}],["2/2",{"_index":354,"title":{},"body":{"coverage.html":{}}}],["2017",{"_index":428,"title":{},"body":{"license.html":{}}}],["2019",{"_index":423,"title":{},"body":{"index.html":{}}}],["4.1.0",{"_index":187,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["6/6",{"_index":347,"title":{},"body":{"coverage.html":{}}}],["85",{"_index":352,"title":{},"body":{"coverage.html":{}}}],["_",{"_index":211,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["_config",{"_index":124,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["_doc",{"_index":126,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["_w",{"_index":125,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["above",{"_index":457,"title":{},"body":{"license.html":{}}}],["accesstoken",{"_index":118,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["action",{"_index":481,"title":{},"body":{"license.html":{}}}],["actions",{"_index":197,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["add",{"_index":373,"title":{},"body":{"index.html":{}}}],["alias",{"_index":159,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["alias(userid",{"_index":267,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["allows",{"_index":269,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["along",{"_index":223,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["already",{"_index":107,"title":{},"body":{"modules/SegmentModule.html":{}}}],["analytics",{"_index":341,"title":{},"body":{"injectables/WindowWrapper.html":{},"index.html":{}}}],["analytics.config",{"_index":45,"title":{},"body":{"interfaces/SegmentConfig.html":{},"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"miscellaneous/variables.html":{}}}],["analytics.config.ts",{"_index":8,"title":{},"body":{"interfaces/SegmentConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["analytics.js",{"_index":275,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"injectables/WindowWrapper.html":{},"index.html":{}}}],["analytics.module.ts",{"_index":56,"title":{},"body":{"modules/SegmentModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["analytics.module.ts:32",{"_index":62,"title":{},"body":{"modules/SegmentModule.html":{}}}],["analytics.service",{"_index":78,"title":{},"body":{"modules/SegmentModule.html":{}}}],["analytics.service.ts",{"_index":111,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"coverage.html":{}}}],["analyticsconsuming",{"_index":372,"title":{},"body":{"index.html":{}}}],["and/or",{"_index":448,"title":{},"body":{"license.html":{}}}],["angular",{"_index":83,"title":{},"body":{"modules/SegmentModule.html":{},"injectables/WindowWrapper.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["angular/common",{"_index":75,"title":{},"body":{"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{}}}],["angular/core",{"_index":37,"title":{},"body":{"interfaces/SegmentConfig.html":{},"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"injectables/WindowWrapper.html":{},"index.html":{}}}],["angular/platform",{"_index":375,"title":{},"body":{"index.html":{}}}],["anonymousid",{"_index":284,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["aot",{"_index":84,"title":{},"body":{"modules/SegmentModule.html":{},"injectables/WindowWrapper.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["api",{"_index":22,"title":{},"body":{"interfaces/SegmentConfig.html":{},"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["apikey",{"_index":14,"title":{},"body":{"interfaces/SegmentConfig.html":{},"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["app.component",{"_index":377,"title":{},"body":{"index.html":{}}}],["appcomponent",{"_index":376,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":109,"title":{},"body":{"modules/SegmentModule.html":{},"index.html":{}}}],["args",{"_index":164,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["args.unshift(method",{"_index":165,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["arising",{"_index":485,"title":{},"body":{"license.html":{}}}],["array",{"_index":313,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["assemblage",{"_index":241,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["associate",{"_index":195,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["associated",{"_index":438,"title":{},"body":{"license.html":{}}}],["associates",{"_index":232,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["attaches",{"_index":307,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["authors",{"_index":474,"title":{},"body":{"license.html":{}}}],["available",{"_index":402,"title":{},"body":{"index.html":{},"modules.html":{}}}],["being",{"_index":226,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["binds",{"_index":321,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["boolean",{"_index":25,"title":{},"body":{"interfaces/SegmentConfig.html":{},"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["bootstrap",{"_index":382,"title":{},"body":{"index.html":{},"overview.html":{}}}],["bound",{"_index":314,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["browse",{"_index":490,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":85,"title":{},"body":{"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["browsermodule",{"_index":374,"title":{},"body":{"index.html":{}}}],["buildto",{"_index":417,"title":{},"body":{"index.html":{}}}],["c",{"_index":427,"title":{},"body":{"license.html":{}}}],["call",{"_index":308,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["callback",{"_index":302,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["callbacks",{"_index":329,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["called",{"_index":271,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["came",{"_index":247,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["category",{"_index":229,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["charge",{"_index":433,"title":{},"body":{"license.html":{}}}],["claim",{"_index":477,"title":{},"body":{"license.html":{}}}],["class",{"_index":97,"title":{},"body":{"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"injectables/WindowWrapper.html":{},"index.html":{}}}],["clear",{"_index":285,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["cluster",{"_index":242,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["code",{"_index":300,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["combines",{"_index":255,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["commonmodule",{"_index":73,"title":{},"body":{"modules/SegmentModule.html":{}}}],["company",{"_index":234,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["compatibility",{"_index":49,"title":{},"body":{"interfaces/SegmentConfig.html":{},"miscellaneous/variables.html":{}}}],["compatible",{"_index":366,"title":{},"body":{"index.html":{}}}],["completed",{"_index":276,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["component",{"_index":386,"title":{},"body":{"index.html":{}}}],["concept",{"_index":250,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["conditions",{"_index":456,"title":{},"body":{"license.html":{}}}],["config",{"_index":66,"title":{},"body":{"modules/SegmentModule.html":{}}}],["configuration",{"_index":10,"title":{},"body":{"interfaces/SegmentConfig.html":{},"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"miscellaneous/variables.html":{}}}],["connection",{"_index":487,"title":{},"body":{"license.html":{}}}],["console",{"_index":292,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["console.error('segment",{"_index":142,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["console.error('the",{"_index":137,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["console.log(\"event",{"_index":399,"title":{},"body":{"index.html":{}}}],["console.log('segment",{"_index":147,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["const",{"_index":41,"title":{},"body":{"interfaces/SegmentConfig.html":{},"interfaces/SegmentPlugin.html":{}}}],["constructor",{"_index":101,"title":{},"body":{"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["constructor(@optional",{"_index":104,"title":{},"body":{"modules/SegmentModule.html":{}}}],["constructor(private",{"_index":396,"title":{},"body":{"index.html":{}}}],["contract",{"_index":482,"title":{},"body":{"license.html":{}}}],["copies",{"_index":450,"title":{},"body":{"license.html":{}}}],["copy",{"_index":436,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":426,"title":{},"body":{"license.html":{}}}],["coverage",{"_index":343,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["current",{"_index":252,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["currently",{"_index":265,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["custom",{"_index":33,"title":{},"body":{"interfaces/SegmentConfig.html":{},"interfaces/SegmentPlugin.html":{}}}],["d.ts",{"_index":415,"title":{},"body":{"index.html":{}}}],["damages",{"_index":478,"title":{},"body":{"license.html":{}}}],["database",{"_index":201,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["deal",{"_index":439,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":488,"title":{},"body":{"license.html":{}}}],["debug",{"_index":15,"title":{},"body":{"interfaces/SegmentConfig.html":{},"interfaces/SegmentPlugin.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["debug(enabled",{"_index":294,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["declarations",{"_index":378,"title":{},"body":{"index.html":{},"overview.html":{}}}],["default",{"_index":499,"title":{},"body":{"miscellaneous/variables.html":{}}}],["default_config",{"_index":46,"title":{},"body":{"interfaces/SegmentConfig.html":{},"interfaces/SegmentPlugin.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["defaults",{"_index":264,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["defined",{"_index":61,"title":{},"body":{"modules/SegmentModule.html":{},"injectables/WindowWrapper.html":{}}}],["dependencies",{"_index":492,"title":{},"body":{"overview.html":{}}}],["deps",{"_index":96,"title":{},"body":{"modules/SegmentModule.html":{}}}],["description",{"_index":9,"title":{},"body":{"interfaces/SegmentConfig.html":{},"modules/SegmentModule.html":{},"injectables/WindowWrapper.html":{}}}],["destinations",{"_index":274,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["dictionary",{"_index":204,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["distlicense",{"_index":421,"title":{},"body":{"index.html":{}}}],["distribute",{"_index":446,"title":{},"body":{"license.html":{}}}],["document",{"_index":114,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["documentation",{"_index":344,"title":{},"body":{"coverage.html":{},"index.html":{},"license.html":{}}}],["dom",{"_index":127,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["each",{"_index":303,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["element",{"_index":312,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["elements",{"_index":311,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["email",{"_index":206,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["emitted",{"_index":304,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["empty",{"_index":138,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["enable",{"_index":293,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["enabled",{"_index":273,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["error('segmentmodule",{"_index":106,"title":{},"body":{"modules/SegmentModule.html":{}}}],["event",{"_index":216,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{},"license.html":{}}}],["events",{"_index":298,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["execute",{"_index":270,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["export",{"_index":38,"title":{},"body":{"interfaces/SegmentConfig.html":{},"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"injectables/WindowWrapper.html":{},"index.html":{}}}],["exports",{"_index":494,"title":{},"body":{"overview.html":{}}}],["express",{"_index":465,"title":{},"body":{"license.html":{}}}],["extra",{"_index":224,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["false",{"_index":47,"title":{},"body":{"interfaces/SegmentConfig.html":{},"interfaces/SegmentPlugin.html":{},"miscellaneous/variables.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/SegmentConfig.html":{},"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"injectables/WindowWrapper.html":{},"coverage.html":{}}}],["files",{"_index":411,"title":{},"body":{"index.html":{},"license.html":{}}}],["first",{"_index":182,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["first.parentnode.insertbefore(script",{"_index":184,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["fitness",{"_index":470,"title":{},"body":{"license.html":{}}}],["following",{"_index":455,"title":{},"body":{"license.html":{}}}],["form",{"_index":322,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["forms",{"_index":324,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["forroot",{"_index":59,"title":{},"body":{"modules/SegmentModule.html":{}}}],["forroot(config",{"_index":60,"title":{},"body":{"modules/SegmentModule.html":{}}}],["free",{"_index":432,"title":{},"body":{"license.html":{}}}],["full",{"_index":401,"title":{},"body":{"index.html":{}}}],["function",{"_index":87,"title":{},"body":{"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"coverage.html":{},"index.html":{}}}],["functions",{"_index":331,"title":{"miscellaneous/functions.html":{}},"body":{"interfaces/SegmentPlugin.html":{},"miscellaneous/functions.html":{}}}],["furnished",{"_index":453,"title":{},"body":{"license.html":{}}}],["gang",{"_index":244,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["generate",{"_index":413,"title":{},"body":{"index.html":{}}}],["getting",{"_index":360,"title":{"index.html":{},"license.html":{}},"body":{}}],["getwindow",{"_index":95,"title":{},"body":{"modules/SegmentModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["getwindow(platformid",{"_index":88,"title":{},"body":{"modules/SegmentModule.html":{},"miscellaneous/functions.html":{}}}],["granted",{"_index":431,"title":{},"body":{"license.html":{}}}],["graph",{"_index":489,"title":{},"body":{"modules.html":{}}}],["group",{"_index":156,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["group(groupid",{"_index":253,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["groupid",{"_index":251,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["handler",{"_index":309,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["helper",{"_index":330,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["helpful",{"_index":290,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["here",{"_index":403,"title":{},"body":{"index.html":{}}}],["hereby",{"_index":430,"title":{},"body":{"license.html":{}}}],["hero",{"_index":389,"title":{},"body":{"index.html":{}}}],["hero.component.css",{"_index":393,"title":{},"body":{"index.html":{}}}],["hero.component.html",{"_index":391,"title":{},"body":{"index.html":{}}}],["herocomponent",{"_index":394,"title":{},"body":{"index.html":{}}}],["holders",{"_index":475,"title":{},"body":{"license.html":{}}}],["host",{"_index":30,"title":{},"body":{"interfaces/SegmentConfig.html":{}}}],["htmlelement",{"_index":319,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["https",{"_index":179,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["id",{"_index":202,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["identified",{"_index":233,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["identifier",{"_index":280,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"coverage.html":{}}}],["identify",{"_index":154,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["identify(userid",{"_index":207,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["identities",{"_index":259,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["implements",{"_index":395,"title":{},"body":{"index.html":{}}}],["implied",{"_index":466,"title":{},"body":{"license.html":{}}}],["import",{"_index":35,"title":{},"body":{"interfaces/SegmentConfig.html":{},"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"injectables/WindowWrapper.html":{},"index.html":{}}}],["importation",{"_index":379,"title":{},"body":{"index.html":{}}}],["imports",{"_index":91,"title":{},"body":{"modules/SegmentModule.html":{},"index.html":{}}}],["included",{"_index":144,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"license.html":{}}}],["including",{"_index":283,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"license.html":{}}}],["index",{"_index":11,"title":{"index.html":{}},"body":{"interfaces/SegmentConfig.html":{},"injectables/WindowWrapper.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/SegmentConfig.html":{},"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"injectables/WindowWrapper.html":{}}}],["information",{"_index":225,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["informations",{"_index":278,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["initialisation",{"_index":63,"title":{},"body":{"modules/SegmentModule.html":{}}}],["initialization",{"_index":29,"title":{},"body":{"interfaces/SegmentConfig.html":{},"interfaces/SegmentPlugin.html":{}}}],["initialized",{"_index":193,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["inject",{"_index":112,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["inject(document",{"_index":130,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["inject(segment_config",{"_index":131,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["inject(windowwrapper",{"_index":129,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["injectable",{"_index":113,"title":{"injectables/WindowWrapper.html":{}},"body":{"interfaces/SegmentPlugin.html":{},"injectables/WindowWrapper.html":{},"coverage.html":{}}}],["injectables",{"_index":338,"title":{},"body":{"injectables/WindowWrapper.html":{},"overview.html":{}}}],["injected",{"_index":384,"title":{},"body":{"index.html":{}}}],["injection",{"_index":39,"title":{},"body":{"interfaces/SegmentConfig.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken",{"_index":36,"title":{},"body":{"interfaces/SegmentConfig.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('ngx",{"_index":44,"title":{},"body":{"interfaces/SegmentConfig.html":{},"miscellaneous/variables.html":{}}}],["install",{"_index":369,"title":{},"body":{"index.html":{}}}],["installation",{"_index":368,"title":{},"body":{"index.html":{}}}],["instance",{"_index":86,"title":{},"body":{"modules/SegmentModule.html":{},"injectables/WindowWrapper.html":{}}}],["instead",{"_index":405,"title":{},"body":{"index.html":{}}}],["integrations",{"_index":172,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["interface",{"_index":0,"title":{"interfaces/SegmentConfig.html":{},"interfaces/SegmentPlugin.html":{}},"body":{"interfaces/SegmentConfig.html":{},"interfaces/SegmentPlugin.html":{},"coverage.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/SegmentConfig.html":{},"interfaces/SegmentPlugin.html":{},"overview.html":{}}}],["isplatformbrowser",{"_index":74,"title":{},"body":{"modules/SegmentModule.html":{}}}],["isplatformbrowser(platformid",{"_index":90,"title":{},"body":{"modules/SegmentModule.html":{}}}],["js",{"_index":414,"title":{},"body":{"index.html":{}}}],["key",{"_index":23,"title":{},"body":{"interfaces/SegmentConfig.html":{},"interfaces/SegmentPlugin.html":{}}}],["kind",{"_index":464,"title":{},"body":{"license.html":{}}}],["know",{"_index":205,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["legend",{"_index":493,"title":{},"body":{"overview.html":{}}}],["length",{"_index":327,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["lets",{"_index":213,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["liability",{"_index":479,"title":{},"body":{"license.html":{}}}],["liable",{"_index":476,"title":{},"body":{"license.html":{}}}],["library",{"_index":365,"title":{},"body":{"index.html":{}}}],["license",{"_index":425,"title":{"license.html":{}},"body":{"license.html":{}}}],["limitation",{"_index":442,"title":{},"body":{"license.html":{}}}],["limited",{"_index":467,"title":{},"body":{"license.html":{}}}],["link",{"_index":310,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["lint",{"_index":409,"title":{},"body":{"index.html":{}}}],["lintto",{"_index":412,"title":{},"body":{"index.html":{}}}],["listen",{"_index":301,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["listeners",{"_index":297,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["load",{"_index":28,"title":{},"body":{"interfaces/SegmentConfig.html":{},"interfaces/SegmentPlugin.html":{}}}],["load(apikey",{"_index":190,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["loaded",{"_index":108,"title":{},"body":{"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{}}}],["loadoninitialization",{"_index":16,"title":{},"body":{"interfaces/SegmentConfig.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["logging",{"_index":289,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["matching",{"_index":51,"title":{},"body":{"interfaces/SegmentConfig.html":{},"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"injectables/WindowWrapper.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["merchantability",{"_index":469,"title":{},"body":{"license.html":{}}}],["merge",{"_index":445,"title":{},"body":{"license.html":{}}}],["messages",{"_index":291,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["metadata.json",{"_index":416,"title":{},"body":{"index.html":{}}}],["method",{"_index":163,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["methods",{"_index":57,"title":{},"body":{"modules/SegmentModule.html":{}}}],["milliseconds",{"_index":328,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["miscellaneous",{"_index":357,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":422,"title":{},"body":{"index.html":{},"license.html":{}}}],["mode",{"_index":26,"title":{},"body":{"interfaces/SegmentConfig.html":{},"interfaces/SegmentPlugin.html":{}}}],["modify",{"_index":444,"title":{},"body":{"license.html":{}}}],["module",{"_index":53,"title":{"modules/SegmentModule.html":{}},"body":{"modules/SegmentModule.html":{},"index.html":{},"overview.html":{}}}],["modules",{"_index":55,"title":{"modules.html":{}},"body":{"modules/SegmentModule.html":{},"modules.html":{}}}],["modulewithproviders",{"_index":69,"title":{},"body":{"modules/SegmentModule.html":{}}}],["name",{"_index":65,"title":{},"body":{"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["new",{"_index":43,"title":{},"body":{"interfaces/SegmentConfig.html":{},"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["new(player",{"_index":117,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["ngmodule",{"_index":70,"title":{},"body":{"modules/SegmentModule.html":{},"index.html":{}}}],["ngoninit",{"_index":397,"title":{},"body":{"index.html":{}}}],["ngx",{"_index":77,"title":{},"body":{"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["noninfringement",{"_index":473,"title":{},"body":{"license.html":{}}}],["notice",{"_index":458,"title":{},"body":{"license.html":{}}}],["npm",{"_index":370,"title":{},"body":{"index.html":{}}}],["npmjs",{"_index":419,"title":{},"body":{"index.html":{}}}],["null",{"_index":103,"title":{},"body":{"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{}}}],["number",{"_index":333,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["object",{"_index":407,"title":{},"body":{"index.html":{}}}],["obtaining",{"_index":435,"title":{},"body":{"license.html":{}}}],["official",{"_index":364,"title":{},"body":{"index.html":{}}}],["on(method",{"_index":305,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["on/off",{"_index":288,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["once",{"_index":161,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["oninit",{"_index":387,"title":{},"body":{"index.html":{}}}],["opendecide",{"_index":424,"title":{},"body":{"index.html":{},"license.html":{}}}],["optional",{"_index":13,"title":{},"body":{"interfaces/SegmentConfig.html":{},"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":171,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["organization",{"_index":235,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["others",{"_index":119,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["otherwise",{"_index":484,"title":{},"body":{"license.html":{}}}],["out",{"_index":486,"title":{},"body":{"license.html":{},"overview.html":{}}}],["overview",{"_index":491,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["page",{"_index":160,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["page(category",{"_index":230,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["page(name",{"_index":228,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["pageview",{"_index":153,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["param",{"_index":98,"title":{},"body":{"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{}}}],["parameters",{"_index":64,"title":{},"body":{"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["parentmodule",{"_index":102,"title":{},"body":{"modules/SegmentModule.html":{}}}],["particular",{"_index":471,"title":{},"body":{"license.html":{}}}],["party",{"_index":245,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["pass",{"_index":317,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["passed",{"_index":315,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["perform",{"_index":215,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["permission",{"_index":429,"title":{},"body":{"license.html":{}}}],["permit",{"_index":451,"title":{},"body":{"license.html":{}}}],["person",{"_index":434,"title":{},"body":{"license.html":{}}}],["persons",{"_index":452,"title":{},"body":{"license.html":{}}}],["platform_id",{"_index":71,"title":{},"body":{"modules/SegmentModule.html":{}}}],["platformid",{"_index":359,"title":{},"body":{"miscellaneous/functions.html":{}}}],["platoon",{"_index":240,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["pluginname",{"_index":336,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["plugins",{"_index":116,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["portions",{"_index":461,"title":{},"body":{"license.html":{}}}],["previous",{"_index":262,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["previousid",{"_index":261,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["previously",{"_index":257,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["private",{"_index":122,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["project",{"_index":236,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["promise",{"_index":208,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["promise((resolve",{"_index":209,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["promises",{"_index":404,"title":{},"body":{"index.html":{}}}],["properties",{"_index":12,"title":{},"body":{"interfaces/SegmentConfig.html":{},"interfaces/SegmentPlugin.html":{},"injectables/WindowWrapper.html":{},"index.html":{}}}],["provide",{"_index":93,"title":{},"body":{"modules/SegmentModule.html":{}}}],["provided",{"_index":462,"title":{},"body":{"license.html":{}}}],["providedin",{"_index":120,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["provider",{"_index":82,"title":{},"body":{"modules/SegmentModule.html":{},"miscellaneous/functions.html":{}}}],["providers",{"_index":92,"title":{},"body":{"modules/SegmentModule.html":{},"index.html":{},"overview.html":{}}}],["provides",{"_index":362,"title":{},"body":{"index.html":{}}}],["proxied",{"_index":32,"title":{},"body":{"interfaces/SegmentConfig.html":{}}}],["public",{"_index":99,"title":{},"body":{"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"injectables/WindowWrapper.html":{},"index.html":{}}}],["publish",{"_index":418,"title":{},"body":{"index.html":{},"license.html":{}}}],["purpose",{"_index":472,"title":{},"body":{"license.html":{}}}],["readonly",{"_index":123,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["ready",{"_index":158,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["recognizable",{"_index":198,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["recognized",{"_index":263,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["record",{"_index":214,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["registry",{"_index":420,"title":{},"body":{"index.html":{}}}],["requests",{"_index":31,"title":{},"body":{"interfaces/SegmentConfig.html":{}}}],["reset",{"_index":155,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{},"overview.html":{}}}],["resolve(this",{"_index":212,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["restriction",{"_index":441,"title":{},"body":{"license.html":{}}}],["result",{"_index":50,"title":{},"body":{"interfaces/SegmentConfig.html":{},"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"injectables/WindowWrapper.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":52,"title":{},"body":{"interfaces/SegmentConfig.html":{},"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"injectables/WindowWrapper.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":89,"title":{},"body":{"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{}}}],["returns",{"_index":68,"title":{},"body":{"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["rights",{"_index":443,"title":{},"body":{"license.html":{}}}],["root",{"_index":121,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["run",{"_index":299,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["same",{"_index":249,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["save",{"_index":371,"title":{},"body":{"index.html":{}}}],["script",{"_index":173,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["script.async",{"_index":177,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["script.src",{"_index":178,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["script.type",{"_index":175,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["segment",{"_index":7,"title":{},"body":{"interfaces/SegmentConfig.html":{},"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"injectables/WindowWrapper.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["segment.io",{"_index":24,"title":{},"body":{"interfaces/SegmentConfig.html":{}}}],["segment_config",{"_index":42,"title":{},"body":{"interfaces/SegmentConfig.html":{},"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["segmentconfig",{"_index":1,"title":{"interfaces/SegmentConfig.html":{}},"body":{"interfaces/SegmentConfig.html":{},"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["segmenthost",{"_index":17,"title":{},"body":{"interfaces/SegmentConfig.html":{}}}],["segmentmodule",{"_index":54,"title":{"modules/SegmentModule.html":{}},"body":{"modules/SegmentModule.html":{},"index.html":{},"modules.html":{}}}],["segmentmodule.forroot",{"_index":380,"title":{},"body":{"index.html":{}}}],["segmentplugin",{"_index":110,"title":{"interfaces/SegmentPlugin.html":{}},"body":{"interfaces/SegmentPlugin.html":{},"coverage.html":{},"index.html":{}}}],["segmentservice",{"_index":76,"title":{},"body":{"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"coverage.html":{},"index.html":{}}}],["segmenturi",{"_index":18,"title":{},"body":{"interfaces/SegmentConfig.html":{}}}],["selector",{"_index":388,"title":{},"body":{"index.html":{}}}],["sell",{"_index":449,"title":{},"body":{"license.html":{}}}],["sended",{"_index":400,"title":{},"body":{"index.html":{}}}],["service",{"_index":385,"title":{},"body":{"index.html":{}}}],["set",{"_index":296,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["shall",{"_index":459,"title":{},"body":{"license.html":{}}}],["skipself",{"_index":72,"title":{},"body":{"modules/SegmentModule.html":{}}}],["snippet",{"_index":143,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["society",{"_index":246,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["software",{"_index":437,"title":{},"body":{"license.html":{}}}],["soon",{"_index":272,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/SegmentConfig.html":{},"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"injectables/WindowWrapper.html":{}}}],["src/.../ngx",{"_index":358,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/ngx",{"_index":6,"title":{},"body":{"interfaces/SegmentConfig.html":{},"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/window",{"_index":339,"title":{},"body":{"injectables/WindowWrapper.html":{},"coverage.html":{}}}],["started",{"_index":361,"title":{"index.html":{},"license.html":{}},"body":{}}],["statements",{"_index":345,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":58,"title":{},"body":{"modules/SegmentModule.html":{}}}],["status",{"_index":27,"title":{},"body":{"interfaces/SegmentConfig.html":{}}}],["string",{"_index":19,"title":{},"body":{"interfaces/SegmentConfig.html":{},"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["styleurls",{"_index":392,"title":{},"body":{"index.html":{}}}],["subject",{"_index":454,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":447,"title":{},"body":{"license.html":{}}}],["submission",{"_index":323,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["substantial",{"_index":460,"title":{},"body":{"license.html":{}}}],["table",{"_index":356,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":355,"title":{},"body":{"coverage.html":{}}}],["taking",{"_index":406,"title":{},"body":{"index.html":{}}}],["team",{"_index":238,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["templateurl",{"_index":390,"title":{},"body":{"index.html":{}}}],["text/javascript",{"_index":176,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this._config",{"_index":132,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this._config.apikey",{"_index":135,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this._config.debug",{"_index":146,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this._config.loadoninitialization",{"_index":133,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this._config.segmenthost",{"_index":180,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this._config.segmenturi.replace('$api_key",{"_index":181,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this._doc.createelement('script",{"_index":174,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this._doc.getelementsbytagname('script')[0",{"_index":183,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this._w.analytics",{"_index":139,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this._w.analytics._loadoptions",{"_index":185,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this._w.analytics.alias(userid",{"_index":268,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this._w.analytics.debug(enabled",{"_index":295,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this._w.analytics.factory",{"_index":162,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this._w.analytics.factory(method",{"_index":169,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this._w.analytics.group(groupid",{"_index":254,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this._w.analytics.id",{"_index":281,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this._w.analytics.identify(userid",{"_index":210,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this._w.analytics.initialize",{"_index":140,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this._w.analytics.invoked",{"_index":141,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this._w.analytics.load",{"_index":170,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this._w.analytics.load(apikey",{"_index":192,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this._w.analytics.methods",{"_index":148,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this._w.analytics.methods.foreach((method",{"_index":167,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this._w.analytics.on(method",{"_index":306,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this._w.analytics.page(category",{"_index":231,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this._w.analytics.plugins",{"_index":337,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this._w.analytics.push(args",{"_index":166,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this._w.analytics.ready(_",{"_index":277,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this._w.analytics.reset",{"_index":286,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this._w.analytics.snippet_version",{"_index":186,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this._w.analytics.timeout(timeout",{"_index":335,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this._w.analytics.track(event",{"_index":220,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this._w.analytics.trackform(forms",{"_index":326,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this._w.analytics.tracklink(elements",{"_index":320,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this._w.analytics.traits",{"_index":282,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this._w.analytics.user",{"_index":279,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this._w.analytics[method",{"_index":168,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this.debug(this._config.debug",{"_index":194,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this.load(this._config.apikey",{"_index":188,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this.segment.track('load",{"_index":398,"title":{},"body":{"index.html":{}}}],["throw",{"_index":105,"title":{},"body":{"modules/SegmentModule.html":{}}}],["timeout",{"_index":332,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["timeout(timeout",{"_index":334,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["token",{"_index":40,"title":{},"body":{"interfaces/SegmentConfig.html":{},"miscellaneous/variables.html":{}}}],["tort",{"_index":483,"title":{},"body":{"license.html":{}}}],["track",{"_index":157,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["track(event",{"_index":219,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["trackclick",{"_index":150,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["trackform",{"_index":152,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["trackform(forms",{"_index":325,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["tracking",{"_index":218,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["tracklink",{"_index":151,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["tracklink(elements",{"_index":318,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["tracksubmit",{"_index":149,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["traits",{"_index":200,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["tribe",{"_index":239,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["troop",{"_index":243,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["true",{"_index":48,"title":{},"body":{"interfaces/SegmentConfig.html":{},"interfaces/SegmentPlugin.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["ts",{"_index":410,"title":{},"body":{"index.html":{}}}],["turn",{"_index":287,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["twice",{"_index":145,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["two",{"_index":256,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["type",{"_index":20,"title":{},"body":{"interfaces/SegmentConfig.html":{},"modules/SegmentModule.html":{},"injectables/WindowWrapper.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["typeof",{"_index":134,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["unassociated",{"_index":258,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["undefined",{"_index":136,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["universal",{"_index":367,"title":{},"body":{"index.html":{}}}],["up",{"_index":248,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["uri",{"_index":34,"title":{},"body":{"interfaces/SegmentConfig.html":{}}}],["use",{"_index":383,"title":{},"body":{"index.html":{},"license.html":{}}}],["used",{"_index":316,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["usefactory",{"_index":94,"title":{},"body":{"modules/SegmentModule.html":{}}}],["user",{"_index":203,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["userconfig",{"_index":128,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["userid",{"_index":199,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["users",{"_index":196,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["user’s",{"_index":266,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["usevalue",{"_index":100,"title":{},"body":{"modules/SegmentModule.html":{}}}],["using",{"_index":363,"title":{},"body":{"index.html":{}}}],["value",{"_index":500,"title":{},"body":{"miscellaneous/variables.html":{}}}],["variable",{"_index":348,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":498,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["video",{"_index":115,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["viewed",{"_index":227,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["views",{"_index":221,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["void",{"_index":191,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["void;development",{"_index":408,"title":{},"body":{"index.html":{}}}],["want",{"_index":260,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["warranties",{"_index":468,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":463,"title":{},"body":{"license.html":{}}}],["website",{"_index":222,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["whether",{"_index":480,"title":{},"body":{"license.html":{}}}],["window",{"_index":80,"title":{},"body":{"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"injectables/WindowWrapper.html":{},"miscellaneous/functions.html":{}}}],["windowwrapper",{"_index":79,"title":{"injectables/WindowWrapper.html":{}},"body":{"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"injectables/WindowWrapper.html":{},"coverage.html":{}}}],["without",{"_index":440,"title":{},"body":{"license.html":{}}}],["workspace",{"_index":237,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["wrapper",{"_index":81,"title":{},"body":{"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"injectables/WindowWrapper.html":{}}}],["wrapper.ts",{"_index":340,"title":{},"body":{"injectables/WindowWrapper.html":{},"coverage.html":{}}}],["wrapper.ts:9",{"_index":342,"title":{},"body":{"injectables/WindowWrapper.html":{}}}],["write",{"_index":189,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["yes",{"_index":67,"title":{},"body":{"modules/SegmentModule.html":{}}}],["your_write_apikey",{"_index":381,"title":{},"body":{"index.html":{}}}],["you’re",{"_index":217,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["zoom",{"_index":495,"title":{},"body":{"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/SegmentConfig.html":{"url":"interfaces/SegmentConfig.html","title":"interface - SegmentConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SegmentConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/ngx-segment-analytics.config.ts\n        \n\n            \n                Description\n            \n            \n                Segment Configuration Interface\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        apiKey\n                                \n                                \n                                            Optional\n                                        debug\n                                \n                                \n                                            Optional\n                                        loadOnInitialization\n                                \n                                \n                                            Optional\n                                        segmentHost\n                                \n                                \n                                            Optional\n                                        segmentUri\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        apiKey\n                                    \n                                \n                                \n                                    \n                                        apiKey:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    API Key for Segment.io \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        debug\n                                    \n                                \n                                \n                                    \n                                        debug:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Debug mode status \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loadOnInitialization\n                                    \n                                \n                                \n                                    \n                                        loadOnInitialization:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Load Segment configuration on initialization \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        segmentHost\n                                    \n                                \n                                \n                                    \n                                        segmentHost:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Segment Host if requests are proxied *\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        segmentUri\n                                    \n                                \n                                \n                                    \n                                        segmentUri:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Segment Custom URI *\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {InjectionToken} from '@angular/core';\n\n/**\n * Segment Configuration Interface\n */\nexport interface SegmentConfig {\n    /** API Key for Segment.io */\n    apiKey?: string;\n    /** Debug mode status */\n    debug?: boolean;\n    /** Load Segment configuration on initialization */\n    loadOnInitialization?: boolean;\n    /** Segment Host if requests are proxied **/\n    segmentHost?: string;\n    /** Segment Custom URI **/\n    segmentUri?: string;\n}\n\n/** Segment Configuration Injection Token */\nexport const SEGMENT_CONFIG: InjectionToken = new InjectionToken('ngx-segment-analytics.config');\n\nexport const DEFAULT_CONFIG: SegmentConfig = {\n    debug: false,\n    loadOnInitialization: true, // Compatibility \n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SegmentModule.html":{"url":"modules/SegmentModule.html","title":"module - SegmentModule","body":"\n                   \n\n\n\n\n    Modules\n    SegmentModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/ngx-segment-analytics.module.ts\n        \n\n\n        \n            Description\n        \n        \n            Segment Module\n\n        \n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRoot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(config?: SegmentConfig)\n                \n            \n\n\n            \n                \n                    Defined in src/ngx-segment-analytics.module.ts:32\n                \n            \n\n\n            \n                \n                    Segment Module Initialisation\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                SegmentConfig\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Segment Configuration\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ModuleWithProviders\n\n                    \n                    \n                        Segment Module\n\n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import {ModuleWithProviders, NgModule, Optional, PLATFORM_ID, SkipSelf} from '@angular/core';\nimport {CommonModule, isPlatformBrowser} from '@angular/common';\nimport {SegmentService} from './ngx-segment-analytics.service';\nimport {SEGMENT_CONFIG, SegmentConfig} from './ngx-segment-analytics.config';\nimport {WindowWrapper} from './window-wrapper';\n\n/**\n * Window Provider for Angular AOT\n * @returns Browser Window instance\n */\nexport function getWindow(platformId: any) {\n    return isPlatformBrowser(platformId) ? window : {};\n}\n\n/**\n * Segment Module\n */\n@NgModule({\n    imports: [CommonModule],\n    providers: [\n        {provide: WindowWrapper, useFactory: getWindow, deps: [PLATFORM_ID]},\n    ]\n})\nexport class SegmentModule {\n\n    /**\n     * Segment Module Initialisation\n     *\n     * @param config Segment Configuration\n     * @returns Segment Module\n     */\n    public static forRoot(config?: SegmentConfig): ModuleWithProviders {\n        return {\n            ngModule: SegmentModule,\n            providers: [\n                {provide: SEGMENT_CONFIG, useValue: config},\n                SegmentService,\n            ],\n        };\n    }\n\n    /**\n     * Segment Module Constructor\n     *\n     * @param parentModule Must be null\n     */\n    constructor(@Optional() @SkipSelf() parentModule: SegmentModule) {\n        if (parentModule) {\n            throw new Error('SegmentModule is already loaded. Import it in the AppModule only');\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SegmentPlugin.html":{"url":"interfaces/SegmentPlugin.html","title":"interface - SegmentPlugin","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SegmentPlugin\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/ngx-segment-analytics.service.ts\n        \n\n\n\n\n\n\n    \n\n\n    \n        import {Inject, Injectable} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\nimport {DEFAULT_CONFIG, SEGMENT_CONFIG, SegmentConfig} from './ngx-segment-analytics.config';\nimport {WindowWrapper} from './window-wrapper';\n\nexport interface SegmentPlugin {\n    // Video Plugins\n    new(player: any, accessToken: string): any;\n\n    // Others plugins\n    new(): any;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class SegmentService {\n\n    private readonly _config: SegmentConfig;\n\n    /**\n     * @param _w Browser window\n     * @param _doc Browser DOM\n     * @param userConfig Segment configuration\n     */\n    constructor(\n        @Inject(WindowWrapper) private _w: WindowWrapper,\n        @Inject(DOCUMENT) private _doc: any,\n        @Inject(SEGMENT_CONFIG) userConfig: SegmentConfig\n    ) {\n        this._config = {...DEFAULT_CONFIG, ...userConfig};\n\n        if (this._config.loadOnInitialization && (typeof this._config.apiKey === 'undefined' || this._config.apiKey === '')) {\n            console.error('The API Key cannot be an empty string if Segment must be loaded on initialization.');\n            return;\n        }\n\n        if (\n            typeof this._w.analytics === 'undefined'\n            || typeof this._w.analytics.initialize === 'undefined'\n            || this._w.analytics.initialize === false\n        ) {\n            if (typeof this._w.analytics !== 'undefined' && this._w.analytics.invoked === true) {\n                console.error('Segment snippet included twice.');\n                return;\n            }\n\n            if (this._config.debug) {\n                console.log('Segment initialization...');\n            }\n\n            this._w.analytics = [];\n            this._w.analytics.invoked = true;\n\n            this._w.analytics.methods = [\n                'trackSubmit',\n                'trackClick',\n                'trackLink',\n                'trackForm',\n                'pageview',\n                'identify',\n                'reset',\n                'group',\n                'track',\n                'ready',\n                'alias',\n                'debug',\n                'page',\n                'once',\n                'off',\n                'on',\n            ];\n\n            this._w.analytics.factory = (method: string) => {\n                return (...args) => {\n                    args.unshift(method);\n                    this._w.analytics.push(args);\n                    return this._w.analytics;\n                };\n            };\n\n            this._w.analytics.methods.forEach((method: string) => {\n                this._w.analytics[method] = this._w.analytics.factory(method);\n            });\n\n            this._w.analytics.load = (key: string, options: { integrations: { [key: string]: boolean } }) => {\n                const script = this._doc.createElement('script');\n                script.type = 'text/javascript';\n                script.async = true;\n                script.src = 'https://' + this._config.segmentHost + this._config.segmentUri.replace('$API_KEY$', key);\n\n                const first = this._doc.getElementsByTagName('script')[0];\n                first.parentNode.insertBefore(script, first);\n                this._w.analytics._loadOptions = options;\n            };\n\n            this._w.analytics.SNIPPET_VERSION = '4.1.0';\n            if (this._config.loadOnInitialization) {\n                this.load(this._config.apiKey);\n            }\n        }\n    }\n\n    /**\n     * Load Segment configuration.\n     *\n     * @param apiKey Write API Key\n     * @param options Optional parameters\n     */\n    public load(apiKey: string, options?: any): void {\n        this._w.analytics.load(apiKey, options);\n        if (this._config.debug) {\n            console.log('Segment initialized');\n        }\n        this.debug(this._config.debug);\n    }\n\n    /**\n     * The identify method is how you associate your users and their actions to a recognizable userId and traits.\n     *\n     * @param userId The database ID for the user.\n     * @param traits A dictionary of traits you know about the user, like their email or name\n     * @param options A dictionary of options.\n     *\n     * @returns\n     */\n    public identify(userId?: string, traits?: any, options?: any): Promise {\n        return new Promise((resolve) => {\n            this._w.analytics.identify(userId, traits, options, _ => resolve(this));\n        });\n    }\n\n    /**\n     * The track method lets you record any actions your users perform.\n     *\n     * @param event The name of the event you’re tracking.\n     * @param properties A dictionary of properties for the event.\n     * @param options A dictionary of options.\n     *\n     * @returns\n     */\n    public track(event: string, properties?: any, options?: any): Promise {\n        return new Promise((resolve) => {\n            this._w.analytics.track(event, properties, options, _ => resolve(this));\n        });\n    }\n\n    /**\n     * The page method lets you record page views on your website, along with optional extra information about the page being viewed.\n     *\n     * @param name The name of the page.\n     * @param properties A dictionary of properties of the page.\n     * @param options A dictionary of options.\n     *\n     * @returns\n     */\n    public page(name?: string, properties?: any, options?: any): Promise;\n\n    /**\n     * The page method lets you record page views on your website, along with optional extra information about the page being viewed.\n     *\n     * @param category The category of the page.\n     * @param name The name of the page.\n     * @param properties A dictionary of properties of the page.\n     * @param options A dictionary of options.\n     *\n     * @returns\n     */\n    public page(category: string, name: string, properties?: any, options?: any): Promise;\n\n    /**\n     * The page method lets you record page views on your website, along with optional extra information about the page being viewed.\n     *\n     * @param category The category of the page.\n     * @param name The name of the page.\n     * @param properties A dictionary of properties of the page.\n     * @param options A dictionary of options.\n     *\n     * @returns\n     */\n    public page(category?: string, name?: string, properties?: any, options?: any): Promise {\n        return new Promise((resolve) => {\n            this._w.analytics.page(category, name, properties, options, _ => resolve(this));\n        });\n    }\n\n    /**\n     * The group method associates an identified user with a company, organization, project, workspace, team, tribe, platoon,\n     * assemblage, cluster, troop, gang, party, society or any other name you came up with for the same concept.\n     *\n     * @param groupId The Group ID to associate with the current user.\n     * @param traits A dictionary of traits for the group.\n     *\n     * @returns\n     */\n    public group(groupId: string, traits?: any): Promise {\n        return new Promise((resolve) => {\n            this._w.analytics.group(groupId, traits, _ => resolve(this));\n        });\n    }\n\n    /**\n     * The alias method combines two previously unassociated user identities.\n     *\n     * @param userId The new user ID you want to associate with the user.\n     * @param previousId The previous ID that the user was recognized by. This defaults to the currently identified user’s ID.\n     * @param options A dictionary of options.\n     *\n     * @returns\n     */\n    public alias(userId: string, previousId?: string, options?: any): Promise {\n        return new Promise((resolve) => {\n            this._w.analytics.alias(userId, previousId, options, _ => resolve(this));\n        });\n    }\n\n    /**\n     * The ready method allows you execute a promise that will be called as soon as all of your enabled destinations have loaded\n     * and analytics.js has completed initialization.\n     *\n     * @returns\n     */\n    public ready(): Promise {\n        return new Promise((resolve) => {\n            this._w.analytics.ready(_ => resolve(this));\n        });\n    }\n\n    /**\n     * Return informations about the currently identified user\n     *\n     * @returns Informations about the currently identified user\n     */\n    public user(): any {\n        return this._w.analytics.user();\n    }\n\n    /**\n     * Return identifier about the currently identified user\n     *\n     * @returns Identifier about the currently identified user\n     */\n    public id(): string | null {\n        return this._w.analytics.id();\n    }\n\n    /**\n     * Return traits about the currently identified user\n     *\n     * @returns Traits about the currently identified user\n     */\n    public traits(): any {\n        return this._w.analytics.traits();\n    }\n\n    /**\n     * Reset the id, including anonymousId, and clear traits for the currently identified user and group.\n     */\n    public reset(): void {\n        this._w.analytics.reset();\n    }\n\n    /**\n     * Turn on/off debug mode, logging helpful messages to the console.\n     *\n     * @param enabled Enable or not the debug mode\n     */\n    public debug(enabled?: boolean): void {\n        this._w.analytics.debug(enabled);\n    }\n\n    /**\n     * Set listeners for these events and run your own custom code.\n     *\n     * @param method Name of the method to listen for\n     * @param callback A function to execute after each the emitted method\n     */\n    public on(method: string, callback: (event?: string, properties?: any, options?: any) => any): void {\n        this._w.analytics.on(method, callback);\n    }\n\n    /**\n     * Attaches the `track` call as a handler to a link\n     *\n     * @param elements DOM element or an array of DOM elements to be bound with track method.\n     * @param event The name of the event, passed to the `track` method or a function that returns a string to be used\n     *              as the name of the track event.\n     * @param properties A dictionary of properties to pass with the `track` method.\n     */\n    public trackLink(elements: HTMLElement | HTMLElement[], event: string | Function, properties?: any | Function): void {\n        this._w.analytics.trackLink(elements, event, properties);\n    }\n\n    /**\n     * Binds a `track` call to a form submission.\n     *\n     * @param forms The form element to track or an array of form\n     * @param event The name of the event, passed to the `track` method.\n     * @param properties A dictionary of properties to pass with the `track` method.\n     */\n    public trackForm(forms: HTMLElement | HTMLElement[], event: string | Function, properties?: any | Function): void {\n        this._w.analytics.trackForm(forms, event, properties);\n    }\n\n    /**\n     * Set the length (in milliseconds) of the callbacks and helper functions\n     *\n     * @param timeout Number of milliseconds\n     */\n    public timeout(timeout: number): void {\n        this._w.analytics.timeout(timeout);\n    }\n\n    public get plugins(): { [pluginName: string]: SegmentPlugin } {\n        return this._w.analytics.plugins;\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WindowWrapper.html":{"url":"injectables/WindowWrapper.html","title":"injectable - WindowWrapper","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  WindowWrapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/window-wrapper.ts\n        \n\n            \n                Description\n            \n            \n                Window Wrapper for Angular AOT\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                analytics\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            analytics\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/window-wrapper.ts:9\n                            \n                        \n\n                \n                    \n                        Segment Analytics.js instance \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\n\n/**\n * Window Wrapper for Angular AOT\n */\n@Injectable()\nexport class WindowWrapper {\n    /** Segment Analytics.js instance */\n    public analytics: any;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/ngx-segment-analytics.config.ts\n            \n            interface\n            SegmentConfig\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/ngx-segment-analytics.config.ts\n            \n            variable\n            DEFAULT_CONFIG\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/ngx-segment-analytics.config.ts\n            \n            variable\n            SEGMENT_CONFIG\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/ngx-segment-analytics.module.ts\n            \n            function\n            getWindow\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/ngx-segment-analytics.service.ts\n            \n            injectable\n            SegmentService\n            \n                85 %\n                (18/21)\n            \n        \n        \n            \n                \n                src/ngx-segment-analytics.service.ts\n            \n            interface\n            SegmentPlugin\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/window-wrapper.ts\n            \n            injectable\n            WindowWrapper\n            \n                100 %\n                (2/2)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            getWindow   (src/.../ngx-segment-analytics.module.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/ngx-segment-analytics.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            getWindow\n                        \n                        \n                    \n                \n            \n            \n                \ngetWindow(platformId: any)\n                \n            \n\n\n\n\n            \n                \n                    Window Provider for Angular AOT\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    platformId\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nngx-segment-analytics\n\n\n\n\n\n\n\nThis Angular module provides an API for Segment using the analytics.js official library.\nCompatible with Angular AOT and Universal.\nInstallation\nTo install this library, run:\n$ npm install --save ngx-segment-analyticsConsuming Segment\nAdd the SegmentModule to your Angular AppModule:\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\n\n// Import the Segment module\nimport { SegmentModule } from 'ngx-segment-analytics';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    // Segment Importation\n    SegmentModule.forRoot({ apiKey: 'YOUR_WRITE_APIKEY', debug: true, loadOnInitialization: true })\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }You can use the SegmentService in any constructor as a injected service :\nimport { Component, OnInit } from '@angular/core';\nimport { SegmentService } from 'ngx-segment-analytics';\n@Component({\n    selector: 'hero',\n    templateUrl: './hero.component.html',\n    styleUrls: ['./hero.component.css']\n})\nexport class HeroComponent implements OnInit {\n\n    constructor(private segment: SegmentService) { }\n\n    public ngOnInit() {\n        this.segment.track('load an hero')\n            .then(() => console.log(\"Event sended\"));\n    }\n\n}Documentation\nA full documentation is available here\nAPI\nThis API is compatible with analytics.js but returns Promises instead of taking callbacks in parameters.\nload(apiKey: string, options: any);\nget plugins: {[pluginName :string]: SegmentPlugin};\nidentify(userId?: string, traits?: any, options?: any): Promise;\ntrack(event: string, properties?: any, options?: any): Promise;\npage(category?: string, name?: string, properties?: any, options?: any): Promise;\ngroup(groupId: string, traits?: any): Promise;\nalias(userId: string, previousId?: string, options?: any): Promise;\nready(): Promise;\nuser(): any;\nid(): any;\ntraits(): any;\nreset(): void;\ndebug(enabled?: boolean): void;\non(method: string, callback: (event?: string, properties?: any, options?: any) => any): void;\ntrackLink(elements: HTMLElement | HTMLElement[], event: string | Function, properties?: Object | Function): void;\ntrackForm(forms: HTMLElement | HTMLElement[], event: string | Function, properties?: Object | Function): void;\ntimeout(timeout: number): void;Development\nTo lint all *.ts files:\n$ npm run lintTo generate all *.js, *.d.ts and *.metadata.json files:\n$ npm run buildTo publish on npmjs registry :\n$ npm publish distLicense\nMIT ©2019 OpenDecide\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nThe MIT License (MIT)\nCopyright (c) 2017 OpenDecide\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        SegmentModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            DEFAULT_CONFIG   (src/.../ngx-segment-analytics.config.ts)\n                        \n                        \n                            SEGMENT_CONFIG   (src/.../ngx-segment-analytics.config.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/ngx-segment-analytics.config.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            DEFAULT_CONFIG\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SegmentConfig\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    debug: false,\n    loadOnInitialization: true, // Compatibility \n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            SEGMENT_CONFIG\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         InjectionToken\n\n                        \n                    \n                    \n                        \n                            Default value : new InjectionToken('ngx-segment-analytics.config')\n                        \n                    \n\n                \n                    \n                        Segment Configuration Injection Token \n\n                    \n                \n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
